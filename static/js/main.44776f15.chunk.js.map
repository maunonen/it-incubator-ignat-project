{"version":3,"sources":["n1-main/m3-dal/Api.tsx","n1-main/m2-bll/redux/app-reducer.ts","n1-main/m2-bll/redux/auth-reducer.ts","n1-main/m1-ui/Pages/LoginPage.tsx","n1-main/m1-ui/Pages/ProfilePage.tsx","n1-main/m1-ui/Pages/NotFoundPage.tsx","n1-main/m1-ui/common/icons/LoadingIcon.tsx","n1-main/m1-ui/common/c7-Progress/Loading.tsx","n1-main/m1-ui/Pages/RestorePassPage.tsx","n1-main/m1-ui/Pages/NewPassPage.tsx","n1-main/m1-ui/common/icons/MessageIcon.tsx","n1-main/m1-ui/Pages/RestorePassCheckEmailPage.tsx","n1-main/m1-ui/Pages/Pack/RangeSlider.tsx","n1-main/m2-bll/redux/pack-reducer.ts","n1-main/m1-ui/Pages/Pack/RangeShowCard.tsx","n1-main/m1-ui/common/c8-Table/DeckTableHeader.tsx","n1-main/m1-ui/common/c8-Table/DeckTable.tsx","n1-main/m1-ui/Pages/Pack/Search.tsx","n1-main/m1-ui/Pages/Pack/Packs.tsx","n1-main/m1-ui/Pages/Cards/Table.tsx","n1-main/m1-ui/Pages/Cards/Pagination.tsx","n1-main/m1-ui/Pages/Cards/PacksList.tsx","n1-main/m1-ui/Pages/Cards/Packs.tsx","n1-main/m1-ui/Pages/SignupPage.tsx","n1-main/m1-ui/Routes.tsx","n1-main/m1-ui/Header/Header.tsx","n1-main/m1-ui/ErrorSnackbar/ErrorSnackbar.tsx","n1-main/App.tsx","reportWebVitals.ts","n1-main/m2-bll/redux/store.ts","n1-main/m1-ui/common/theme.ts","index.tsx"],"names":["instance","axios","create","baseURL","withCredentials","acsessAPI","email","password","rememberMe","post","delete","from","message","resetPasswordToken","pack","queryPackObject","get","id","params","initState","errorMessage","appStatus","error","setMessageErrorAC","type","setAppStatusAC","value","setAppErrorAC","isLoggedIn","isFetching","isPassRequestSent","isPassChanged","_id","name","avatar","publicCardPacksCount","created","update","isAdmin","verified","loggedInAC","signupAC","setPassRequestAC","profileAC","useStyles","makeStyles","theme","createStyles","root","textAlign","padding","width","formTitle","marginBottom","formSubtitle","formDescription","formButtonBlock","margin","display","alignItems","displayStretch","textFieldArea","LoginPage","classes","dispatch","useDispatch","useSelector","state","auth","isLoggedError","restoreSchema","Yup","shape","required","formik","useFormik","initialValues","remember","validationSchema","onSubmit","values","then","res","data","catch","rej","response","resetForm","to","Grid","container","justify","style","minHeight","item","Card","className","handleSubmit","Typography","variant","color","FormControl","FormGroup","TextField","label","getFieldProps","touched","errors","align","FormControlLabel","control","Checkbox","Button","onClick","formLinkTitle","marginTop","Link","component","NavLink","PATH","SIGNUP","ProfilePage","userProfile","useEffect","console","log","xs","src","ALL_ROUTES","NotFoundPage","LoadingIcon","size","xmlns","height","viewBox","fill","d","maxWidth","loadingTitle","loadingMessage","Loading","props","justifyContent","paddingTop","paddingBottom","RestorePassPage","app","success","status","request","RESTORE_PASS_CHECK_EMAIL","LOGIN","errorBlock","NewPassPage","useState","showPassword","setShowPassword","token","useParams","min","matches","Input","placeholder","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","MessageIcon","x1","x2","y1","y2","gradientUnits","offset","stopColor","stopOpacity","opacity","cx","cy","rx","ry","transform","formIcon","valuetext","RangeSlider","React","setValue","max","Slider","onChange","event","newValue","valueLabelDisplay","getAriaValueText","ACTIONS_TYPE","flexGrow","privateModeHeader","privateModeBlock","modeButton","borderRadius","paper","sliderCaption","CenteredGrid","ButtonGroup","gutterBottom","initialPackState","cardPacks","packName","isSortTypeAscending","sortField","user_id","page","pageCount","cardPacksTotalCount","minCardsCount","maxCardsCount","setCardsPackAC","SET_CARDS_PACK","payload","setPageCountAC","SET_PACK_PAGE_COUNT","setPageAC","SET_PACK_PAGE","setPackNameAC","SET_PACK_NAME","getAllPack","length","SET_PACK_MAX","SET_PACK_MIN","SET_PACK_TOTAL_COUNT","headCells","numeric","disablePadding","spacing","table","minWidth","visuallyHidden","border","clip","overflow","top","DeckTableHeader","onRequestSort","numSelected","rowCount","TableHead","TableRow","map","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","tableRow","backgroundColor","palette","action","hover","DeckTable","selected","getAllPacks","sortPacks","paramsObject","Paper","TableContainer","Table","SET_PACK_SORT_TYPE","TableBody","deck","index","labelId","role","tabIndex","scope","slice","cardsCount","moment","updated","format","user_name","err","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","newPage","onRowsPerPageChange","parseInt","target","rootGrid","search","searchInputBlock","addDeckBlock","marginLeft","FullWidthGrid","setSearch","path","grade","shots","rating","deckCover","addPack","packObject","newPackObject","cardsPack","typeDeck","onKeyUp","key","filterBlock","mainBlock","boxSizing","mainSearchBlock","mainSearchHeader","mainTableBlock","Pack","elevation","square","StyledTableCell","withStyles","head","common","black","white","body","fontSize","StyledTableRow","createData","calories","fat","carbs","protein","rows","CustomizedTables","row","BootstrapInput","input","background","transition","transitions","InputBase","Pagination","numberPacks","setAge","NativeSelect","Cards","resetButton","flex","marginRight","submitButton","SignupPage","cfPassword","validate","test","PROFILE","NOTFOUND","RESTORE_PASS","NEW_PASS","PACK","CARDS","TEST_PAGE","Routes","exact","render","RestorePassCheckEmailPage","listBlock","flexDirection","iconBlock","menuItem","Header","history","useHistory","AppBar","Toolbar","itemMenu","Menu","push","LinearProgress","Alert","ErrorSnackbar","handleClose","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","SET_PACK_USER_ID","store","createStore","applyMiddleware","thunkMiddleware","muiTheme","createTheme","overrides","MuiCssBaseline","backgroundRepeat","backgroundAttachment","MuiButton","fontFamily","fontWeight","fontStyle","lineHeight","textTransform","MuiCard","MuiLink","MuiTextField","MuiInput","typography","h1","h2","h3","body1","join","primary","light","main","dark","secondary","warning","info","text","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.44776f15.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst settings = {\n    withCredentials: true\n};\nconst instance = axios.create({\n    /*baseURL: 'http://localhost:7542/2.0/',*/\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\n    ...settings\n})\n\n// api\n\nexport type UserProfileType = {\n    _id:string;\n    email: string,\n    name: string,\n    avatar?: string,\n    publicCardPacksCount: number,\n    created: string,\n    update: string,\n    isAdmin: boolean,\n    verified:boolean,\n    rememberMe:boolean,\n    error: string\n}\n\nexport type UserLoginType = {\n    _id: string;\n    email: string,\n    name: string,\n    avatar?: string,\n    publicCardPacksCount: number\n}\n\ntype registrationUserType = {\n    addedUser: {}\n    error?: string\n}\n\nexport type UserForgotPassType = {\n    info: string\n    success: boolean\n    answer: boolean\n    html: boolean\n}\nexport type UserNewPasswordType = {\n    info: string\n}\n\nexport interface PackResponseDataType {\n    _id: string\n    user_id: string\n    user_name: string\n    private: boolean\n    name: string\n    path: string\n    grade: number\n    shots: number\n    cardsCount: number\n    type: string\n    rating: number\n    created: string\n    updated: string\n    more_id: string\n    __v: number\n}\n\nexport interface PackDataType extends Omit<PackResponseDataType, 'created' | 'updated'> {\n    created: Date\n    updated: Date\n}\n\nexport interface GetPackResponseType {\n    cardPacks: Array<PackResponseDataType>\n    page: number\n    pageCount: number\n    cardPacksTotalCount: number\n    minCardsCount: number\n    maxCardsCount: number\n    token: string\n    tokenDeathTime: number\n}\n\nexport interface GetPackResponseWithDateType extends Omit<GetPackResponseType, 'cardPacks'> {\n    cardPacks: Array<PackDataType>\n}\n\nexport interface DeletePackResponseType {\n    deletedCardsPack: PackResponseDataType\n    token: string\n    tokenDeathTime: number\n}\n\nexport type NewPackResponseType = {\n    newCardsPack: PackResponseDataType,\n    token: string\n    tokenDeathTime: number\n}\n\nexport interface PackUpdateResponseDataType extends PackResponseDataType {\n    deckCover : string\n}\n\nexport interface UpdatePackResponseType {\n    updatedCardsPack: PackUpdateResponseDataType,\n    token: string\n    tokenDeathTime: number\n}\n\nexport interface NewPackObjectDataType {\n    cardsPack: {\n        name?: string\n        path?: string\n        grade?: number\n        shots?: number\n        rating?: number\n        deckCover?: string\n        privateDeck?: boolean\n        type?: string\n    }\n}\n\nexport interface GetPackQueryParamsType {\n    params?: {\n        packName?: string | null\n        min?: number | null\n        max?: number | null\n        sortPacks?: string | null\n        page?: number | null\n        pageCount?: number | null\n        user_id?: string | null\n    }\n}\n\nexport interface PackUpdateObjectType {\n    cardsPack: {\n        _id: string\n        name?: string\n        path?: string\n        grade?: number\n        shots?: number\n        rating?: number\n        deckCover?: string\n        private?: boolean\n        type?: string\n    }\n}\n\nexport const acsessAPI = {\n    loginUser(email: string, password: string, rememberMe: boolean) {\n        const promise = instance.post<UserProfileType>(\"/auth/login\", {email, password, rememberMe});\n        return promise\n    },\n    logoutUser() {\n        const promise = instance.delete<UserProfileType>(\"/auth/login\",);\n        return promise\n    },\n    registrationUser(email: string, password: string) {\n        const promise = instance.post<registrationUserType>(\"/auth/register\", {email, password})\n        return promise\n    },\n    forgotPassword(email: string, from: string, message: string) {\n        return instance.post<UserForgotPassType>(\"/auth/forgot\", {email, from, message});\n    },\n    setNewPassword(password: string, resetPasswordToken: string) {\n        return instance.post<UserNewPasswordType>(\"/auth/set-new-password\", {password, resetPasswordToken});\n    },\n    authUser() {\n        return instance.post<any>(\"/auth/me\", {});\n    },\n\n    postCardPacks(pack: NewPackObjectDataType) {\n        return instance.post<NewPackResponseType>(\"/cards/pack\", pack);\n    },\n    getCardPacks(queryPackObject: GetPackQueryParamsType) {\n        return instance.get<GetPackResponseType>(\"/cards/pack\", queryPackObject);\n    },\n    deleteCardsPacks(id: string) {\n        return instance.delete<DeletePackResponseType>(\"/cards/pack\", {params: {id}});\n    },\n    updateCardPacks(packUpdateObject: PackUpdateObjectType) {\n        return instance.put<PackUpdateResponseDataType>(\"/cards/pack\", packUpdateObject);\n    },\n}\n\n\n\n\n\n\n","type InitStateType = {\n    errorMessage: string | null\n    appStatus: AppStatusType\n    error: string | null\n};\n\nconst initState: InitStateType = {\n    errorMessage: null,\n    appStatus: 'idle',\n    error: null\n};\nexport type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type CombinedActionType = SetMessageErrorActionType\n    | SetAppStatusType\n    | SetAppErrorActionType\n\nexport const appReducer = (state = initState, action: CombinedActionType): InitStateType => {\n    switch (action.type) {\n        case \"APP/SET-ERROR-MESSAGE\": {\n            return {...state, errorMessage: action.errorMessage}\n        }\n        case \"APP/SET-APP-STATUS\" : {\n            return {...state, appStatus: action.value}\n        }\n        case 'APP/SET-ERROR':\n            return {...state, error: action.error}\n        default:\n            return state;\n    }\n};\n\n\nexport const setMessageErrorAC = (errorMessage: string) => ({type: \"APP/SET-ERROR-MESSAGE\", errorMessage} as const)\nexport const setAppStatusAC = (value: AppStatusType) => ({type: \"APP/SET-APP-STATUS\", value} as const);\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\n\n\nexport type SetMessageErrorActionType = ReturnType<typeof setMessageErrorAC>\nexport type SetAppStatusType = ReturnType<typeof setAppStatusAC>\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>","import {acsessAPI, UserProfileType} from \"../../m3-dal/Api\";\nimport {Dispatch} from 'redux';\nimport {setAppErrorAC, setAppStatusAC, setMessageErrorAC} from \"./app-reducer\";\n\n\nexport type InitStateType = typeof initState;\n\nconst initState = {\n    isLoggedIn: false,\n    error: \"\",\n    email: \"\",\n    password: \"\",\n    isFetching: false,\n    isPassRequestSent: false,\n    isPassChanged: false,\n    _id: \"\",\n    name: \"\",\n    avatar: \"\",\n    publicCardPacksCount: 0,\n    created: \"\",\n    update: \"\",\n    isAdmin: false,\n    verified: false,\n    rememberMe: false,\n};\n\nexport const authReducer = (state: InitStateType = initState, action: CombinedActionType): InitStateType => {\n    switch (action.type) {\n        case \"IS-LOGGED-IN\": {\n            return {...state, isLoggedIn: action.value, error: action.error};\n        }\n        case \"SIGN_UP\":\n            return {\n                ...state,\n                email: action.email,\n                password: action.password,\n                error: action.message as string,\n            };\n        case \"IS_FETCHING\":\n            return {\n                ...state, isFetching: action.isFetching\n            }\n        case \"RESTORE/SET-PASS-REQUEST\" : {\n            return {...state, isPassRequestSent: action.value}\n        }\n        case \"RESTORE/SET-PASS-CHANGED\" : {\n            return {...state, isPassChanged: action.value}\n        }\n        case \"ADD-PROFILE\": {\n            return {...state, ...action.value};\n        }\n        default:\n            return state;\n    }\n};\n\ntype CombinedActionType = LoggedInType\n    | SignupActionType\n    | SetIsFetchingSignupActionType\n    | SetPassRequestType\n    | SetPassChangedType\n    | profileACType;\n\nexport type LoggedInType = ReturnType<typeof loggedInAC>;\nexport type SignupActionType = ReturnType<typeof signupAC>;\nexport type SetIsFetchingSignupActionType = ReturnType<typeof setIsFetchingSignupAC>;\nexport type SetPassRequestType = ReturnType<typeof setPassRequestAC>\nexport type SetPassChangedType = ReturnType<typeof setPassChangedAC>\nexport type profileACType = ReturnType<typeof profileAC>\n\nexport const loggedInAC = (value: boolean, error: string) =>\n    ({type: \"IS-LOGGED-IN\", value, error} as const);\n\nexport const signupAC = (email: string, password: string, message?: string) =>\n    ({type: 'SIGN_UP', email, password, message} as const);\n\nexport const setIsFetchingSignupAC = (isFetching: boolean) =>\n    ({type: 'IS_FETCHING', isFetching} as const);\n\nexport const setPassRequestAC = (value: boolean) => ({type: \"RESTORE/SET-PASS-REQUEST\", value} as const);\nexport const setPassChangedAC = (value: boolean) => ({type: \"RESTORE/SET-PASS-CHANGED\", value} as const);\n\nexport const profileAC = (value: UserProfileType) => ({type: \"ADD-PROFILE\", value} as const);\n\n// thunks-------------------------------------------------------------------\n\nexport const loggedInTC = (email: string, password: string, rememberMe: boolean) => {\n    return (dispatch: Dispatch) => {\n        acsessAPI.loginUser(email, password, rememberMe)\n            .then((res) => {\n                dispatch(profileAC(res.data))\n                dispatch(loggedInAC(true, \"\"))\n            })\n                .catch(rej => {\n                //    if has response and has data\n                if (rej.response?.data) {\n                    dispatch(loggedInAC(false, rej.response.data.error))\n                } else {\n                    dispatch(loggedInAC(false, \"network error\"))\n                }\n            })\n    }\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<CombinedActionType>) => {\n    acsessAPI.logoutUser()\n        .then(res => {\n            //  dispatch(profileAC(res.data))\n            dispatch(loggedInAC(false, \"\"))\n        }).catch((rej) => {\n        // if (rej.response.data){\n        // console.log(rej.response.data.error)\n        dispatch(loggedInAC(false, rej.response.data.error))\n    })\n}\n\n\nexport const authMeTC = () => {\n    return (dispatch: Dispatch<CombinedActionType>) => {\n        acsessAPI.authUser()\n            .then((res) => {\n                dispatch(profileAC(res.data))\n                dispatch(loggedInAC(true, \"\"))\n            }).catch(rej => {\n            const error = rej.response\n                ? rej.response.data.error\n                : (rej.message + ', more details in the console');\n            console.log(error)\n        })\n    }}\n\nexport const registrationThunk = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        acsessAPI.registrationUser(email, password)\n            .then(() => {\n                dispatch(signupAC(email, password));\n                dispatch(setIsFetchingSignupAC(true));\n\n            })\n            .catch(error => {\n                const message = error.response.data.error\n                dispatch(signupAC(email, password, message))\n                dispatch(setAppErrorAC(error.message))\n                dispatch(setAppStatusAC(\"failed\"))\n            })\n    }\n}\n\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\n    return (dispatch: Dispatch<any>) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.setNewPassword(password, resetPasswordToken)\n            .then((res) => {\n                if (res.status === 200) {\n                    dispatch(setPassChangedAC(true))\n                    dispatch(setAppStatusAC('succeeded'))\n                }\n            })\n            .catch(error => {\n                dispatch(setAppStatusAC('failed'))\n                if (error.response && error.response.status) {\n                    if (error.response?.data?.error) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                    } else {\n                        dispatch(setMessageErrorAC('Something went wrong'))\n                    }\n                } else {\n                    dispatch(setMessageErrorAC('Something went wrong'))\n                }\n            })\n    }\n}\n\n\nexport const forgotPassTC = (email: string) => {\n    return (dispatch: Dispatch<any>) => {\n        dispatch(setAppStatusAC('loading'))\n        const from = \"santari33@gmail.com\";\n        const message = \"<div>password recovery link: <a href='https://maunonen.github.io/it-incubator-ignat-project/#/set-new-password/$token$'>link</a></div>\";\n\n        acsessAPI.forgotPassword(email, from, message)\n            .then((res) => {\n                console.log('Thunk', res)\n                if (res.data.success) {\n                    dispatch(setPassRequestAC(true))\n                    dispatch(setAppStatusAC('succeeded'))\n                }\n            })\n            .catch(error => {\n                console.log('Thunk error', error)\n                dispatch(setAppStatusAC('failed'))\n                if (error.response && error.response.status) {\n                    dispatch(setMessageErrorAC(error.response.data.error))\n                    dispatch(setPassRequestAC(false))\n                    /*if (error.response.status === 404) {\n                        // Request made and server responded\n                        /!*console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);*!/\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n\n                    } else if (error.response.status === 400) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n                    } else if (error.response.status === 500) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n                    }*/\n                } else {\n                    dispatch(setMessageErrorAC(\"Something went wrong\"))\n                    dispatch(setPassRequestAC(false))\n                    if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                    }\n                }\n            })\n    }\n}","\n\nimport React from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {\n    Button, Card, createStyles, FormControl, FormGroup, Checkbox,\n    Grid, makeStyles, TextField, Theme, Typography, FormControlLabel, Link\n} from \"@material-ui/core\";\nimport {loggedInTC} from \"../../m2-bll/redux/auth-reducer\";\nimport {PATH} from \"../Routes\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        width: \"413px\",\n        /*maxWidth : \"413px\",*/\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        /*marginTop : \"20px\",*/\n        marginBottom: \"40px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\",\n        display: \"flex\",\n        alignItems: \"\",\n    },\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    },\n}))\n\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n}\n\nconst LoginPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\n    const isLoggedError = useSelector((state: AppStoreType) => state.auth.error)\n\n    const restoreSchema = Yup.object().shape({\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            email: 'nya-admin@nya.nya',\n            password: '',\n            remember: false\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            dispatch(loggedInTC(values.email, values.password, values.remember))\n            formik.resetForm()\n        },\n    })\n\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n\n    return <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Grid item>\n            <Card className={classes.root}>\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-Incubator\n                    </Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Signin</Typography>\n                    <div style={{color: \"red\"}}>{isLoggedError}</div>\n                    <FormControl className={classes.displayStretch}>\n                        <FormGroup className={classes.textFieldArea}>\n                            <TextField\n                                type=\"email\"\n                                label=\"Email\"\n                                margin=\"dense\"\n                                {...formik.getFieldProps('email')}\n                            />\n                            { formik.touched.email && formik.errors.email &&\n                            <div style={{color: 'red'}}>{formik.errors.email}</div>\n                            }\n                            <TextField\n                                type=\"password\"\n                                label=\"password\"\n                                margin=\"dense\"\n                                {...formik.getFieldProps('password')}\n                            />\n                            {formik.touched.password && formik.errors.password &&\n                            <div style={{color: 'red'}}>{formik.errors.password}</div>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >Enter your email address and password\n                            </Typography>\n\n\n                            <FormControlLabel\n                                label={'Remember me'}\n                                control={<Checkbox/>}\n                                // onChange={changeRememberCheckboxHandler}\n                                {...formik.getFieldProps('remember')}\n                            />\n\n                            <div className={classes.formButtonBlock}>\n                            <Button\n                                type={'reset'}\n                                onClick={() => {formik.resetForm()}}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>\n                                Reset\n                            </Button>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>\n                                Login\n                            </Button>\n                            </div>\n\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formLinkTitle}\n                                style={{ marginTop : \"30px\", marginBottom : \"15px\"}}\n                            >Don't have an account</Typography>\n                            <Link\n                                component={NavLink}\n                                to={PATH.SIGNUP}\n                                color={\"textPrimary\"}\n                            >Sign up\n                            </Link>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Card>\n        </Grid>\n    </Grid>\n}\nexport default LoginPage\n","import React, {useEffect} from 'react'\nimport { Grid} from '@material-ui/core'\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {authMeTC, InitStateType} from \"../../m2-bll/redux/auth-reducer\"\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {Redirect} from \"react-router-dom\";\nimport {PATH} from \"../Routes\";\nimport {UserProfileType} from \"../../m3-dal/Api\";\n\n\nexport const ProfilePage: React.FC = () => {\n\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppStoreType, InitStateType>(state => state.auth)\n    const userProfile = useSelector<AppStoreType, UserProfileType>(state => state.auth)\n\n\n    useEffect(() => {\n        if (!userProfile._id) {\n            dispatch(authMeTC())\n        }\n    }, [])\n\n\n    if (userProfile._id) {\n        return (\n            <Grid container justify=\"center\">\n                <Grid item xs={5}>\n                    <h1>User profile</h1>\n                    <h3>Id {userProfile._id}</h3>\n                    <h3>Email {userProfile.email}</h3>\n                    <h3>Name {userProfile.name}</h3>\n                    <h3>Avatar <img src={userProfile.avatar} style={{width: 100}}/></h3>\n                    <h3>PublicCardPacksCount= {userProfile.publicCardPacksCount}</h3>\n                    <h3>created {userProfile.created}</h3>\n                    <h3>update= {userProfile.update}</h3>\n                    <h3>isAdmin= {userProfile.isAdmin}</h3>\n                    <h3>verified= {userProfile.verified}</h3>\n                    <h3>rememberMe= {userProfile.rememberMe}</h3>\n                </Grid>\n            </Grid>\n        )\n    } else {\n        return (\n            <Redirect from={PATH.ALL_ROUTES} to=\"/login\"/>\n        )\n    }\n}\n\nexport default ProfilePage\n\n\n","import React from 'react'\n\nconst NotFoundPage : React.FC = () => {\n    return (\n        <>\n            <h1>Not found page</h1>\n        </>\n    )\n}\nexport default NotFoundPage","import React from \"react\";\n\nexport interface MessageIconPropsType {\n    size?: string\n}\n\nconst LoadingIcon: React.FC<MessageIconPropsType> = ({size}) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={size}\n            height={size}\n            viewBox=\"0 0 512 512\"\n        >\n            <path\n                fill=\"#6e75e2\"\n                d=\"M30 256C30 131.383 131.383 30 256 30c46.867 0 91.563 14.211 129.196 40.587h-29.074c-8.284 0-15 6.716-15 15s6.716 15 15 15h70.292c8.284 0 15-6.716 15-15V15.295c0-8.284-6.716-15-15-15s-15 6.716-15 15v37.339C366.987 18.499 312.91 0 256 0 187.62 0 123.333 26.629 74.98 74.98 26.629 123.333 0 187.62 0 256c0 44.921 11.871 89.182 34.33 127.998 2.78 4.806 7.818 7.49 12.997 7.49 2.55 0 5.134-.651 7.499-2.019 7.17-4.149 9.619-13.325 5.471-20.496C40.477 334.718 30 295.652 30 256zM477.67 128.002c-4.15-7.171-13.328-9.619-20.496-5.47-7.17 4.149-9.619 13.325-5.471 20.496C471.523 177.281 482 216.346 482 256c0 124.617-101.383 226-226 226-46.863 0-91.551-14.215-129.18-40.587h29.058c8.284 0 15-6.716 15-15s-6.716-15-15-15H85.587c-8.284 0-15 6.716-15 15v70.292c0 8.284 6.716 15 15 15s15-6.716 15-15v-37.376C145.013 493.475 199.083 512 256 512c68.38 0 132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256c0-44.923-11.871-89.184-34.33-127.998z\"\n            ></path>\n            <path\n                fill=\"#e2dff4\"\n                d=\"M377.424 285.689l-13.599-7.852c1.446-7.162 2.175-14.469 2.175-21.838s-.729-14.676-2.175-21.838l13.599-7.852a15.001 15.001 0 005.49-20.49l-20-34.641c-4.142-7.174-13.315-9.632-20.49-5.49l-13.602 7.853a108.886 108.886 0 00-37.821-21.856V136c0-8.284-6.716-15-15-15h-40c-8.284 0-15 6.716-15 15v15.686a108.89 108.89 0 00-37.822 21.856l-13.601-7.853c-7.174-4.144-16.349-1.685-20.49 5.49l-20 34.641c-4.142 7.174-1.684 16.348 5.49 20.49l13.598 7.851c-1.446 7.163-2.176 14.47-2.176 21.838s.729 14.676 2.176 21.838l-13.598 7.851c-7.174 4.142-9.632 13.316-5.49 20.49l20 34.641c4.142 7.175 13.315 9.633 20.49 5.49l13.601-7.853a108.865 108.865 0 0037.822 21.856V376c0 8.284 6.716 15 15 15h40c8.284 0 15-6.716 15-15v-15.686a108.886 108.886 0 0037.821-21.856l13.602 7.853c7.174 4.142 16.348 1.683 20.49-5.49l20-34.641a15.003 15.003 0 00-5.49-20.491zM256 296c-22.091 0-40-17.909-40-40s17.909-40 40-40 40 17.909 40 40-17.909 40-40 40z\"\n            ></path>\n            <path\n                fill=\"#bebcdd\"\n                d=\"M384.413 217.203a14.994 14.994 0 00-1.499-11.382l-20-34.641c-4.142-7.174-13.315-9.632-20.49-5.49l-13.602 7.853a108.886 108.886 0 00-37.821-21.856V136c0-8.284-6.716-15-15-15H256v95c22.091 0 40 17.909 40 40s-17.909 40-40 40v95h20.001c8.284 0 15-6.716 15-15v-15.686a108.886 108.886 0 0037.821-21.856l13.602 7.853c7.174 4.142 16.348 1.683 20.49-5.49l20-34.641a15.003 15.003 0 001.499-11.382 14.994 14.994 0 00-6.989-9.108l-13.599-7.852C365.271 270.676 366 263.369 366 256s-.729-14.676-2.175-21.838l13.599-7.852a14.995 14.995 0 006.989-9.107z\"\n            ></path>\n            <path\n                fill=\"#f1f1f4\"\n                d=\"M256 311c-30.327 0-55-24.673-55-55s24.673-55 55-55 55 24.673 55 55-24.673 55-55 55zm0-80c-13.785 0-25 11.215-25 25s11.215 25 25 25 25-11.215 25-25-11.215-25-25-25z\"\n            ></path>\n            <path\n                fill=\"#e2dff4\"\n                d=\"M281 256c0 13.785-11.215 25-25 25v30c30.327 0 55-24.673 55-55s-24.673-55-55-55v30c13.785 0 25 11.215 25 25z\"\n            ></path>\n            <g fill=\"#525cdd\">\n                <path\n                    d=\"M426.413.295c-8.284 0-15 6.716-15 15v37.339C366.987 18.499 312.91 0 256 0v30c46.867 0 91.563 14.211 129.196 40.587h-29.074c-8.284 0-15 6.716-15 15s6.716 15 15 15h70.292c8.284 0 15-6.716 15-15V15.295c-.001-8.284-6.717-15-15.001-15zM477.67 128.002c-4.15-7.171-13.328-9.619-20.496-5.47-7.17 4.149-9.619 13.325-5.471 20.496C471.523 177.281 482 216.346 482 256c0 124.617-101.383 226-226 226v30c68.38 0 132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256c0-44.923-11.871-89.184-34.33-127.998z\"></path>\n            </g>\n        </svg>\n    );\n}\n\nexport default LoadingIcon;","import React from 'react'\nimport {Card, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport LoadingIcon from \"../icons/LoadingIcon\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    loadingTitle : {\n        margin: \"30px 40px\"\n    },\n    loadingMessage : {\n        margin: \"30px 40px\"\n    }\n}))\n\nexport type LoadingPropsType = {\n    message?: string\n}\n\nconst Loading: React.FC<LoadingPropsType> = (props) => {\n\n    const classes = useStyles()\n    const {message} = props\n\n    return (\n        <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{minHeight: '100vh'}}\n        >\n            <Card\n                className={classes.root}\n            >\n                <Grid item>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.loadingTitle}\n                    >It-incubator</Typography>\n                    <LoadingIcon size={\"100px\"}/>\n                    {\n                        message &&\n                        <Typography\n                            variant={\"body1\"}\n                            className={classes.loadingMessage}\n                        >\n                            {message}\n                        </Typography>}\n                </Grid>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default Loading","import React from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {\n    Button,\n    Card, createStyles, FormControl,\n    FormGroup,\n    Grid, Link, makeStyles,\n    TextField, Theme, Typography\n} from \"@material-ui/core\";\nimport {PATH} from \"../Routes\";\nimport Loading from \"../common/c7-Progress/Loading\";\nimport {forgotPassTC} from \"../../m2-bll/redux/auth-reducer\";\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        /*maxWidth: \"413px\",*/\n        width: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\"\n    },\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    }\n}))\n\n\n\n\nconst RestorePassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const {isLoggedIn} = useSelector((state: AppStoreType) => state.auth)\n    const {isPassRequestSent,} = useSelector((state: AppStoreType) => state.auth)\n    const {errorMessage, appStatus} = useSelector((state: AppStoreType) => state.app)\n\n\n    console.log(errorMessage)\n    console.log('App status', appStatus)\n\n    type FormikErrorType = {\n        email?: string\n    }\n\n    const restoreSchema = Yup.object().shape({\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            dispatch(forgotPassTC(formik.values.email))\n            formik.resetForm()\n        },\n    })\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    if (appStatus === 'loading') {\n        return <Loading message={\"Wait a minute please\"}/>\n    }\n    if (isPassRequestSent) {\n        return <Redirect to={PATH.RESTORE_PASS_CHECK_EMAIL}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Grid item>\n            <Card\n                className={classes.root}\n            >\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-incubator</Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Forget your password</Typography>\n                    <FormControl className={classes.displayStretch}>\n                        <FormGroup className={classes.textFieldArea}>\n                            <TextField\n                                type=\"email\"\n                                label=\"Email\"\n                                margin=\"normal\"\n                                {...formik.getFieldProps('email')}\n                            />\n                            {\n                                formik.touched.email && formik.errors.email &&\n                                <div style={{color: 'red'}}>{formik.errors.email}</div>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >\n                                Enter your email address and we will send you further instructions\n                            </Typography>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>Send instructions</Button>\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formLinkTitle}\n                            >Did you remember your password</Typography>\n                            <Link\n                                component={NavLink}\n                                to={PATH.LOGIN}\n                                color={\"textPrimary\"}\n                            >Try logging in\n                            </Link>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Card>\n        </Grid>\n    </Grid>\n}\nexport default RestorePassPage","import React, {useState} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport { Redirect} from \"react-router-dom\";\nimport { useParams } from 'react-router-dom'\n/*import {setNewPasswordTC} from \"../../m2-bll/redux/restore-pass-reducer\";*/\n/*import {setNew}*/\n\nimport {\n    Button,\n    Card, createStyles,\n    FormControl,\n    FormGroup,\n    Grid, IconButton, Input, InputAdornment,  makeStyles,\n    Theme, Typography\n} from \"@material-ui/core\";\nimport {PATH} from \"../Routes\";\nimport {Visibility, VisibilityOff} from '@material-ui/icons';\nimport {setNewPasswordTC} from \"../../m2-bll/redux/auth-reducer\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"20px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"35px 35px\"\n    },\n    errorBlock: {\n        paddingTop: \"20px\"\n    }\n}))\n\n\nconst NewPassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const { isLoggedIn} = useSelector((state: AppStoreType) => state.auth)\n    const { isPassChanged} = useSelector((state: AppStoreType) => state.auth)\n    const { appStatus } = useSelector((state: AppStoreType) => state.app)\n    const [showPassword, setShowPassword] = useState(false)\n    const { token } = useParams<{token: string}>();\n    console.log('Token', token)\n\n    type FormikErrorType = {\n        password?: string\n    }\n\n    const restoreSchema = Yup.object().shape({\n        password: Yup.string()\n            .required('No password provided.')\n            .min(8, 'Password is too short - should be at least 8 character.')\n            .matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, 'Minimum eight characters, at least one letter, one number and one special character.'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            if (token) {\n                dispatch(setNewPasswordTC(formik.values.password, token))\n            }\n            formik.resetForm()\n        },\n    })\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n    }\n    const handleMouseDownPassword = () => {\n        setShowPassword(!showPassword)\n    }\n    if ( appStatus === 'loading') {\n        return <div>Loading</div>\n    }\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    if (isPassChanged) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Card\n            className={classes.root}\n        >\n            <Grid item>\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-incubator</Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Create new pasword</Typography>\n                    <FormControl>\n                        <FormGroup>\n                            <Input\n                                type={showPassword ? 'text' : 'password'}\n                                placeholder={\"Password\"}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                {...formik.getFieldProps('password')}\n\n                            />\n                            {\n                                (formik.touched.password && formik.errors.password) ?\n                                    <div\n                                        style={{color: 'red'}}\n                                        className={classes.errorBlock}\n\n                                    >{formik.errors.password}</div> :\n                                    <br/>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >\n                                Create new password and we will send you further instructions to email\n                            </Typography>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>Create new password</Button>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Grid>\n        </Card>\n    </Grid>\n}\nexport default NewPassPage","import React from \"react\";\n\nexport interface MessageIconPropsType  {\n    size? : string\n}\n\nconst MessageIcon : React.FC<MessageIconPropsType> = ({size}) =>  {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            /*width=\"512\"\n            height=\"512\"*/\n            height={ size }\n            width={ size }\n            viewBox=\"0 0 512 512\"\n        >\n            <linearGradient\n                id=\"SVGID_1_\"\n                x1=\"432.334\"\n                x2=\"198.334\"\n                y1=\"502.645\"\n                y2=\"192.646\"\n                gradientUnits=\"userSpaceOnUse\"\n            >\n                <stop offset=\"0\" stopColor=\"#d2deff\" stopOpacity=\"0\"></stop>\n                <stop offset=\"1\" stopColor=\"#b7c5ff\"></stop>\n            </linearGradient>\n            <path\n                fill=\"url(#SVGID_1_)\"\n                d=\"M501.873 153.583c-22.357-56.888-91.226-91.003-149.556-68.427-66.582 25.77-44.506 131.673-104.983 153.088-32.669 11.568-80.962-31.644-113.969-38.271-60.821-12.21-115.881 30.705-129.439 90.134-13.832 60.63 8.353 141.61 74.967 158.066 79.35 19.602 120.683-51.729 187.249-72.211 68.31-21.019 144.263 28.622 200.814-31.776 41.78-44.62 57.055-134.271 34.917-190.603z\"\n            ></path>\n            <path\n                fill=\"#2626bc\"\n                d=\"M476.847 178.593c0-39.497-32.019-71.517-71.517-71.517-30.6 0-56.699 19.225-66.91 46.25H79.812c-11.046 0-20 8.954-20 20v221.41c0 11.046 8.954 20 20 20h352.375c11.046 0 20-8.954 20-20v-162.14c15.099-13.113 24.66-32.435 24.66-54.003z\"\n                opacity=\"0.1\"\n            ></path>\n            <g fill=\"#fff\">\n                <path d=\"M432.187 389.736H79.812c-11.046 0-20-8.954-20-20v-221.41c0-11.046 8.954-20 20-20h352.375c11.046 0 20 8.954 20 20v221.41c0 11.046-8.954 20-20 20z\"></path>\n                <path d=\"M262.092 223.711l190.096 146.025c0 11.046-8.954 20-20 20H79.812c-11.046 0-20-8.954-20-20l190.096-146.025a10 10 0 0112.184 0z\"></path>\n                <path d=\"M249.908 294.352L59.812 148.326c0-11.046 8.954-20 20-20h352.375c11.046 0 20 8.954 20 20L262.092 294.352a10.002 10.002 0 01-12.184 0z\"></path>\n            </g>\n            <path\n                fill=\"#6583fe\"\n                d=\"M370.947 363.125h-32.134a5 5 0 01-5-5v-22.154a5 5 0 015-5h32.134a5 5 0 015 5v22.154a5 5 0 01-5 5z\"\n            ></path>\n            <path\n                fill=\"#2626bc\"\n                d=\"M311.871 342.743h-27.833a5 5 0 110-10h27.833a5 5 0 110 10zM311.871 363.125h-97.833a5 5 0 110-10h97.833a5 5 0 110 10z\"\n            ></path>\n            <g>\n                <ellipse\n                    cx=\"405.33\"\n                    cy=\"153.593\"\n                    fill=\"#6583fe\"\n                    rx=\"71.517\"\n                    ry=\"71.517\"\n                    transform=\"rotate(-80.8 405.29 153.649)\"\n                ></ellipse>\n                <path\n                    fill=\"#2626bc\"\n                    d=\"M405.33 230.11c42.191 0 76.517-34.325 76.517-76.517s-34.325-76.517-76.517-76.517-76.517 34.325-76.517 76.517c0 24.544 11.629 46.41 29.653 60.421l-99.42 76.372a5.004 5.004 0 01-6.092 0L64.992 146c1.121-7.17 7.341-12.674 14.82-12.674h229.366a5 5 0 100-10H79.812c-13.785 0-25 11.215-25 25v221.41c0 13.785 11.215 25 25 25h352.375c13.785 0 25-11.215 25-25v-132.14a5 5 0 10-10 0V359.59L316.28 259.031l50.94-39.13a76.017 76.017 0 0038.11 10.209zm-209.61 28.921L64.812 359.59V158.472zm251.27 113.018c-1.118 7.174-7.32 12.687-14.803 12.687H79.812c-7.483 0-13.685-5.513-14.803-12.687l138.919-106.713 42.934 32.98c2.69 2.066 5.914 3.1 9.138 3.1s6.447-1.033 9.138-3.1l42.934-32.981zM338.813 153.593c0-36.677 29.839-66.517 66.517-66.517s66.517 29.839 66.517 66.517c0 36.677-29.839 66.517-66.517 66.517s-66.517-29.84-66.517-66.517z\"\n                ></path>\n            </g>\n            <path\n                fill=\"#fff\"\n                d=\"M374.114 129.204l10.206 24.389-10.206 24.389c-1.733 4.142 2.448 8.292 6.577 6.528l61.619-26.319c4.048-1.729 4.048-7.467 0-9.196l-61.619-26.319c-4.129-1.764-8.31 2.386-6.577 6.528z\"\n            ></path>\n            <g fill=\"#6583fe\">\n                <path d=\"M330.828 81.671a14.45 14.45 0 01-10.253-4.24c-5.654-5.654-5.654-14.853 0-20.506 5.651-5.652 14.852-5.654 20.505 0 5.654 5.654 5.654 14.853 0 20.506a14.45 14.45 0 01-10.252 4.24zm0-18.991a4.487 4.487 0 00-3.183 1.316 4.506 4.506 0 000 6.364 4.505 4.505 0 006.364 0 4.506 4.506 0 000-6.364 4.487 4.487 0 00-3.181-1.316zM218.538 459.315a14.457 14.457 0 01-10.253-4.24c-5.654-5.654-5.654-14.853 0-20.506 5.652-5.653 14.854-5.653 20.506 0 5.654 5.654 5.654 14.853 0 20.506a14.453 14.453 0 01-10.253 4.24zm0-18.991a4.487 4.487 0 00-3.183 1.316 4.506 4.506 0 000 6.364 4.506 4.506 0 006.365 0 4.506 4.506 0 000-6.364 4.487 4.487 0 00-3.182-1.316zM294.78 94.547a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535zM439.746 440.322a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535zM178.884 445.072a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535z\"></path>\n            </g>\n        </svg>\n    );\n}\n\nexport default MessageIcon;","import React from 'react'\nimport { useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport { Redirect} from \"react-router-dom\";\n\nimport {Card, createStyles,\n\n    Grid,  makeStyles,\n     Theme, Typography\n} from \"@material-ui/core\";\nimport MessageIcon from '../common/icons/MessageIcon';\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    formSubtitle: {\n        marginBottom: \"20px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\"\n    },\n    formIcon: {\n        /*fontSize: \"64px\",*/\n        margin: \"25px 0px\",\n        color: \"#21268F\",\n        opacity: 0.7,\n    }\n}))\n\n\nconst RestorePassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Card\n            className={classes.root}\n        >\n            <Grid item>\n                <Typography\n                    variant={\"h1\"}\n                    className={classes.formTitle}\n                >It-incubator</Typography>\n                <div className={classes.formIcon}>\n                    <MessageIcon\n                        size=\"72px\"\n                    />\n                </div>\n                <Typography\n                    variant={\"h2\"}\n                    className={classes.formSubtitle}\n                >Forget your password</Typography>\n                <Typography\n                    variant={\"body1\"}\n                    className={classes.formDescription}\n                >\n                    We’ve sent an Email with instructions to example@mail.com\n                </Typography>\n            </Grid>\n        </Card>\n    </Grid>\n}\nexport default RestorePassPage","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles({\n    root: {\n        /*width: 300,*/\n    },\n});\n\nfunction valuetext(value: number) {\n    return `${value}`;\n}\n\nexport default function RangeSlider() {\n    const classes = useStyles();\n    const pack = useSelector((state: AppStoreType) => state.pack);\n    const [value, setValue] = React.useState<number[]>([20, 37]);\n\n    const handleChange = (event: any, newValue: number | number[]) => {\n        setValue(newValue as number[]);\n    };\n\n    useEffect(() => {\n        if ((pack.min != null) && pack.max) {\n            setValue([pack.min, pack.max])\n        }\n    }, [pack]);\n\n\n    return (\n        <>\n            <Slider\n                value={value}\n                onChange={handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n            />\n        </>\n    );\n}\n","import {\n    acsessAPI,\n    GetPackQueryParamsType,\n    GetPackResponseWithDateType, NewPackObjectDataType,\n    PackDataType,\n    PackResponseDataType, PackUpdateObjectType\n} from \"../../m3-dal/Api\";\nimport {AppStatusType, setAppStatusAC, setMessageErrorAC} from \"./app-reducer\";\nimport {Dispatch} from \"redux\";\n\nexport enum ACTIONS_TYPE {\n    SET_CARDS_PACK = 'PackReducer/SET_CARDS_PACK',\n    SET_PACK_NAME = 'PackReducer/SET_PACK_NAME',\n    SET_PACK_MIN = 'PackReducer/SET_PACK_MIN',\n    SET_PACK_MAX = 'PackReducer/SET_PACK_MAX',\n    SET_PACK_PAGE = 'PackReducer/SET_PACK_PAGE',\n    SET_PACK_PAGE_COUNT = 'PackReducer/SET_PACK_PAGE_COUNT',\n    SET_PACK_TOTAL_COUNT = 'PackReducer/SET_PACK_TOTAL_COUNT',\n    SET_PACK_USER_ID = 'PackReducer/SET_PACK_USER_ID',\n    SET_PACK_SORT_TYPE = 'PackReducer/SET_PACK_SORT_TYPE',\n    SET_PACK_SORT_FIELD = 'PackReducer/SET_PACK_SORT_FIELD',\n    ADD_NEW_PACK = 'PackReducer/ADD_NEW_PACK',\n    GET_PACKS = 'PackReducer/GET_PACKS',\n}\n\nexport interface InitialPackStateType {\n    cardPacks: Array<PackResponseDataType>,\n    /*Query params*/\n    packName: string | null\n    // minCardsCount\n    min: number | null\n    // maxCardsCount\n    max: number | null\n    // sort params\n    //sortPacks: string\n    isSortTypeAscending: boolean\n    sortField: keyof PackDataType | null\n    page: number\n    pageCount: number\n    user_id: string | null\n    /* getting from server */\n    cardPacksTotalCount: number\n    minCardsCount: number | null\n    maxCardsCount: number | null\n}\n\nconst initialPackState: InitialPackStateType = {\n    cardPacks: [],\n    packName: null,\n    min: null,\n    max: null,\n    isSortTypeAscending: false,\n    sortField: \"name\",\n    user_id: null,\n    page: 0,\n    pageCount: 5,\n    cardPacksTotalCount: 0,\n    minCardsCount: null,\n    maxCardsCount: null,\n}\n\n\nexport const packReducer = (state: InitialPackStateType = initialPackState, action: CombinedActionType): InitialPackStateType => {\n    /*console.log('action type', action.type)*/\n    /*console.log('action payload', action.payload)*/\n\n    switch (action.type) {\n        case ACTIONS_TYPE.SET_CARDS_PACK:\n            /*debugger*/\n            return {\n                ...state,\n                cardPacks: [],\n                ...action.payload,\n            }\n        case ACTIONS_TYPE.SET_PACK_NAME:\n        case ACTIONS_TYPE.SET_PACK_MAX:\n        case ACTIONS_TYPE.SET_PACK_MIN:\n        case ACTIONS_TYPE.SET_PACK_PAGE:\n        case ACTIONS_TYPE.SET_PACK_PAGE_COUNT:\n        case ACTIONS_TYPE.SET_PACK_USER_ID:\n        case ACTIONS_TYPE.SET_PACK_SORT_TYPE:\n        case ACTIONS_TYPE.SET_PACK_TOTAL_COUNT:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n};\n\nexport const setUserIdAC = (user_id: string) => ({\n    type: ACTIONS_TYPE.SET_PACK_USER_ID,\n    payload: {\n        user_id\n    }\n})\n\nexport type PackSortFieldType = 'updated' | 'name' | 'created' |\n    'cardsCount' | 'grade' | 'shots' | 'rating' | 'user_name' |\n    'shots' | 'type' | 'private'\n\nexport const setPackSortType = (isSortTypeAscending: boolean, sortField: keyof PackDataType) => ({\n    type: ACTIONS_TYPE.SET_PACK_SORT_TYPE,\n    payload: {\n        isSortTypeAscending, sortField\n    }\n})\n\nexport const setCardsPackTotalCountAC = (cardPacksTotalCount: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_TOTAL_COUNT,\n    payload: {\n        cardPacksTotalCount\n    }\n})\n\nexport const setCardsPackAC = (cardPacks: Array<PackResponseDataType>) => ({\n    type: ACTIONS_TYPE.SET_CARDS_PACK,\n    /*cardPacks*/\n    payload: {\n        cardPacks\n    }\n} as const)\n\nexport const setPageCountAC = (pageCount: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_PAGE_COUNT,\n    payload: {\n        pageCount\n    }\n})\n\nexport const setPageAC = (page: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_PAGE,\n    payload: {\n        page\n    }\n})\nexport const setMaxCardsCountAC = (max: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_MAX,\n    payload: {\n        max\n    }\n})\nexport const setMinCardsCountAC = (min: number) => ({\n    type: ACTIONS_TYPE.SET_PACK_MIN,\n    payload: {\n        min\n    }\n})\nexport const setPackNameAC = (packName: string | null) => ({\n    type: ACTIONS_TYPE.SET_PACK_NAME,\n    payload: {\n        packName\n    }\n})\n\nexport type CombinedActionType =\n    SetPackNameActionType | SetMinCardsCountType |\n    SetMaxCardsCountType | SetUserIdType |\n    SetPageCountType | SetPageType | SetCardsPackType |\n    SetPackSortType\n\n\nexport type SetPackNameActionType = ReturnType<typeof setPackNameAC>\nexport type SetMinCardsCountType = ReturnType<typeof setMinCardsCountAC>\nexport type SetMaxCardsCountType = ReturnType<typeof setMaxCardsCountAC>\n\nexport type SetUserIdType = ReturnType<typeof setUserIdAC>\nexport type SetPageCountType = ReturnType<typeof setPageCountAC>\nexport type SetPageType = ReturnType<typeof setPageAC>\nexport type SetCardsPackType = ReturnType<typeof setCardsPackAC>\nexport type setCardsPackTotalCountType = ReturnType<typeof setCardsPackTotalCountAC>\n\nexport type SetPackSortType = ReturnType<typeof setPackSortType>\n/*export type SETPackSortFieldType = ReturnType<typeof SETPackSortFieldType>*/\n\nexport const getAllPack = (queryPackObject: GetPackQueryParamsType) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.getCardPacks(queryPackObject)\n            .then(res => {\n                if (res.data && res.data.cardPacks.length > 0) {\n                    dispatch(setCardsPackAC(res.data.cardPacks))\n                    /*   const cardsPackWithDate = res.data.cardPacks.map((pack: PackResponseDataType) => {\n                           return {\n                               ...pack,\n                               created: new Date(pack.created),\n                               updated: new Date(pack.updated)\n                           }\n                       })*/\n                    /*dispatch(setCardsPackAC(cardsPackWithDate))*/\n                } else {\n                    dispatch(setCardsPackAC([]))\n                }\n\n                dispatch(setMaxCardsCountAC(res.data.maxCardsCount))\n                dispatch(setMinCardsCountAC(res.data.minCardsCount))\n                dispatch(setPageAC(res.data.page))\n                dispatch(setPageCountAC(res.data.pageCount))\n                dispatch(setCardsPackTotalCountAC(res.data.cardPacksTotalCount))\n                dispatch(setAppStatusAC('succeeded'))\n            })\n            .catch(error => {\n                dispatch(setAppStatusAC('failed'))\n                dispatch(setMessageErrorAC('Something went wrong'))\n                /*if (error.response && error.response.status) {\n                    dispatch(setMessageErrorAC(error.response.data.error))\n                } else {\n                    dispatch(setMessageErrorAC(\"Something went wrong\"))\n                    dispatch(setPassRequestAC(false))\n                    if (error.request) {\n                        console.log(error.request);\n                    } else {\n                        console.log('Error', error.message);\n                    }\n                }*/\n\n            })\n    }\n}\n\nexport const deletePackByIdTC = (id: string) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.deleteCardsPacks(id)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n            })\n            .catch(err => {\n                console.log(err)\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}\n\nexport const addNewPackTC = (packObject: NewPackObjectDataType) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.postCardPacks(packObject)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n            })\n            .catch(err => {\n                console.log(err)\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}\n\nexport const updateCardPack = (packUpdateObject: PackUpdateObjectType) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.updateCardPacks(packUpdateObject)\n            .then(res => {\n                dispatch(setAppStatusAC('succeeded'))\n            })\n            .then(err => {\n                console.log(err)\n                dispatch(setAppStatusAC('failed'))\n            })\n    }\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport RangeSlider from './RangeSlider' ;\nimport Typography from '@material-ui/core/Typography';\nimport {ButtonGroup} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 0,\n    },\n    privateModeHeader : {\n        marginBottom : \"20px\",\n    },\n    privateModeBlock : {\n        display: \"flex\",\n        alignItems: \"stretch\",\n        marginBottom : \"40px\",\n    },\n    modeButton : {\n        padding: \"8px 32px\",\n        borderRadius: \"0px\",\n        textAlign: \"center\",\n    },\n    paper: {\n        /*padding: theme.spacing(1),*/\n        /*textAlign: 'left',*/\n        /*color: theme.palette.text.secondary,*/\n        /*height: 600,*/\n        /*backgroundColor: \"#e2dfef\"*/\n    },\n    sliderCaption: {\n        marginBottom : \"40px\",\n        /*padding: theme.spacing(6),*/\n        /*textAlign: 'center',*/\n    },\n}));\n\nexport default function CenteredGrid() {\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container>\n                <Typography\n                    variant=\"h3\"\n                    className={classes.privateModeHeader}\n                >\n                    Show pack cards\n                </Typography>\n                {/*<Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"space-evenly\"\n                    alignItems=\"center\"\n                >*/}\n                <ButtonGroup\n                    variant=\"text\"\n                    color=\"primary\"\n                    aria-label=\"small outlined secondary button group\"\n                    /*aria-label=\"outlined primary button group\"*/\n                    className={classes.privateModeBlock}\n                >\n                    <Button\n                        className={classes.modeButton}\n                    >My</Button>\n                    <Button\n                        className={classes.modeButton}\n                    >ALl</Button>\n                </ButtonGroup>\n                {/*<Button variant=\"contained\" color=\"primary\">\n                    My\n                  </Button>\n                  <Button variant=\"contained\" color=\"secondary\">\n                    All\n                  </Button>*/}\n                {/*</Grid>*/}\n                <Typography\n                    variant=\"h3\"\n                    gutterBottom\n                    className={classes.sliderCaption}\n                >\n                    Number of cards\n                </Typography>\n                <RangeSlider/>\n            </Grid>\n        </div>\n    );\n}\n","import React from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {PackDataType} from \"../../../m3-dal/Api\";\nimport {useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\n\ninterface Data {\n    calories: number;\n    carbs: number;\n    fat: number;\n    name: string;\n    protein: number;\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof PackDataType;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name'},\n    {id: 'cardsCount', numeric: true, disablePadding: false, label: 'Cards'},\n    {id: 'updated', numeric: true, disablePadding: false, label: 'Last updated'},\n    {id: 'user_name', numeric: true, disablePadding: false, label: 'Created by'},\n];\n\ninterface DeckTableHeaderPropsType {\n    numSelected: number;\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof PackDataType) => void;\n    onSelectAllClick?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    rowCount: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\n\nconst DeckTableHeader: React.FC<DeckTableHeaderPropsType> = (props) => {\n    const classes = useStyles()\n    const {numSelected, rowCount, onRequestSort} = props;\n    const createSortHandler = (property: keyof PackDataType) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n    const {sortField, isSortTypeAscending} = useSelector((state: AppStoreType) => state.pack)\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\n                        sortDirection={isSortTypeAscending ? 'asc' : 'desc'}\n                    >\n                        <TableSortLabel\n                            active={sortField === headCell.id}\n                            direction={isSortTypeAscending ? 'asc' : 'desc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {sortField === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                            {isSortTypeAscending ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                <TableCell\n                    align={'center'}\n                >Action</TableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\n\nexport default DeckTableHeader","import React, {useEffect} from 'react';\nimport {createStyles, lighten, makeStyles, Theme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport DeckTableHeader from \"./DeckTableHeader\";\nimport {GetPackQueryParamsType, PackDataType} from \"../../../m3-dal/Api\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {stat} from \"fs\";\nimport {Button} from \"@material-ui/core\";\nimport {\n    deletePackByIdTC,\n    getAllPack,\n    setPackSortType,\n    setPageAC,\n    setPageCountAC\n} from \"../../../m2-bll/redux/pack-reducer\";\nimport moment from 'moment'\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n/*function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}*/\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        tableRow: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\nconst DeckTable: React.FC = () => {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    /*const [rowsPerPage, setRowsPerPage] = React.useState(5);*/\n\n    /*const {cardPacks, isSortTypeAscending, sortField} = useSelector((state: AppStoreType) => state.pack)*/\n    const {pack} = useSelector((state: AppStoreType) => state)\n\n    const {_id} = useSelector((state: AppStoreType) => state.auth)\n    const dispatch = useDispatch()\n\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof PackDataType) => {\n        dispatch(setPackSortType(!pack.isSortTypeAscending, property))\n        /*setOrder(pack.isSortTypeAscending ? 'desc' : 'asc');*/\n\n    };\n\n    const getAllPacks = () => {\n        let sortPacks\n        // if sortField set create sortPacks field '0created' '1updated'\n        if (pack.sortField) {\n            sortPacks = +pack.isSortTypeAscending + pack.sortField;\n        }\n\n        const paramsObject: GetPackQueryParamsType = {\n            params: {\n                ...(pack.packName !== null && {packName: pack.packName}),\n                ...(pack.min !== null && {min: pack.min}),\n                ...(pack.max !== null && {max: pack.max}),\n                ...(pack.page && {page: pack.page}),\n                ...(pack.pageCount && {pageCount: pack.pageCount}),\n                ...(pack.user_id !== null && {user_id: pack.user_id}),\n                ...(sortPacks && {sortPacks: sortPacks}),\n            }\n        }\n        dispatch(getAllPack(paramsObject))\n    }\n\n\n    useEffect(() => {\n        getAllPacks()\n    }, [])\n\n    useEffect(() => {\n        getAllPacks()\n    }, [pack.isSortTypeAscending, pack.sortField, pack.page, pack.pageCount, pack.packName])\n\n    /*const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };*/\n\n    /*const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected: string[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };*/\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        dispatch(setPageAC(newPage + 1));\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setPageCountAC(parseInt(event.target.value, 10)))\n        /*setPage(0);*/\n    };\n\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDense(event.target.checked);\n    };\n\n    /*const isSelected = (name: string) => selected.indexOf(name) !== -1;*/\n\n    /*const emptyRows = pack.pageCount - Math.min(pack.pageCount, rows.length - page * pack.pageCount);*/\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        /*size={dense ? 'small' : 'medium'}*/\n                        size={'small'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <DeckTableHeader\n                            numSelected={selected.length}\n                            /*onSelectAllClick={handleSelectAllClick}*/\n                            onRequestSort={handleRequestSort}\n                            rowCount={pack.cardPacksTotalCount}\n                        />\n                        <TableBody>\n                            {\n                                pack.cardPacks\n                                    .map((deck, index) => {\n                                        /*const isItemSelected = isSelected(deck.name);*/\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n                                        return (\n                                            <TableRow\n                                                /*hover*/\n                                                /*onClick={(event) => handleClick(event, pack.name)}*/\n                                                role=\"checkbox\"\n                                                /*aria-checked={isItemSelected}*/\n                                                tabIndex={-1}\n                                                key={index}\n                                                /*selected={isItemSelected}*/\n                                                className={classes.tableRow}\n                                            >\n                                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"normal\">\n                                                    {deck.name.length > 20 ? deck.name.slice(0, 20) + '...' : deck.name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">{deck.cardsCount}</TableCell>\n                                                <TableCell\n                                                    align=\"right\">{moment(deck.updated).format(\"DD.MM.YYYY\")}</TableCell>\n                                                <TableCell align=\"right\">{deck.user_name}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    {\n                                                        deck.user_id === _id &&\n                                                        <>\n                                                            <Button\n                                                                onClick={() => {\n                                                                    dispatch(deletePackByIdTC(deck._id));\n                                                                    getAllPacks();\n                                                                }}>Delete</Button>\n                                                            <Button>Edit</Button>\n                                                        </>\n                                                    }\n                                                    <Button>Learn</Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                            {/*{emptyRows > 0 && (\n                                <TableRow style={{height: (dense ? 33 : 53) * emptyRows}}>\n                                    <TableCell colSpan={6}/>\n                                </TableRow>\n                            )}*/}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 15]}\n                    component=\"div\"\n                    // total number of rows from server side\n                    count={pack.cardPacksTotalCount}\n                    // rows per page\n                    rowsPerPage={pack.pageCount}\n                    // current page(starts from 0) from server side - 1\n                    page={pack.page - 1}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </Paper>\n            {/*<FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense}/>}\n                label=\"Dense padding\"\n            />*/}\n        </div>\n    );\n}\nexport default DeckTable","import React, {KeyboardEventHandler, useState} from 'react';\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch} from \"react-redux\";\nimport {addNewPackTC, setPackNameAC} from \"../../../m2-bll/redux/pack-reducer\";\nimport {NewPackObjectDataType} from \"../../../m3-dal/Api\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        rootGrid: {\n            flexGrow: 1,\n        },\n        search: {\n            display: \"flex\",\n            alignItems: \"stretch\",\n            /*marginRight: 40,*/\n            backgroundColor: \"#e2dfef\"\n        },\n        searchInputBlock: {\n            flexGrow: 3,\n        },\n        addDeckBlock: {\n            marginLeft: \"20px\",\n        }\n    }),\n);\n\nexport default function FullWidthGrid() {\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const [search, setSearch] = React.useState('');\n    const [type, setType] = useState<string>('')\n    const [name, setName] = useState<string>('first deck updated')\n    const [path, setPath] = useState<string>('')\n    const [grade, setGrade] = useState<number>(0)\n    const [shots, setShots] = useState<number>(0)\n    const [rating, setRating] = useState<number>(0)\n    const [deckCover, setDeckCover] = useState<string>('')\n    const [privateDeck, setPrivateDeck] = useState<boolean>(false)\n\n    const inputHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(event.target.value);\n    };\n\n    const addPack = () => {\n        let newPackObject: NewPackObjectDataType = {\n            cardsPack: {\n                ...(name && {name: name}),\n                ...(path && {path: path}),\n                ...(grade && {grade: grade}),\n                ...(shots && {shots: shots}),\n                ...(rating && {rating: rating}),\n                ...(deckCover && {deckCover: deckCover}),\n                /*...( privateDeck && { private: privateDeck}),*/\n                ...(type && {typeDeck: type}),\n            }\n        }\n        dispatch(addNewPackTC(newPackObject))\n    }\n\n    const buttonClickHandler = () => {\n        addPack();\n        // dispatch(ignatBackRequest(value))\n    };\n\n\n\n\n    const handlePressEnter = (event: React.ChangeEvent<HTMLInputElement>) => {\n        console.log('Event', event)\n        /*if (event && event == 'Enter') {\n            //this.sendMessage();\n        }*/\n    }\n    /*const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value);\n    };*/\n\n\n    return (\n        <div\n            /*className={classes.rootGrid}*/\n        >\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"flex-start\"\n                alignItems=\"stretch\"\n            >\n                <Grid\n                    item\n                    className={classes.searchInputBlock}\n                >\n                    <TextField\n                        size={\"small\"}\n                        className={classes.search}\n                        style={{backgroundColor: \"#ECECF9\"}}\n                        label=\"Search\"\n                        placeholder=\"Input list name\"\n                        variant=\"outlined\"\n                        onChange={inputHandleChange}\n                        /*onKeyDown={handlePressEnter}*/\n                        onKeyUp={(event) => {\n                            console.log('Event', event )\n                            if ( event.key === 'Enter'){\n                                if (!search){\n                                    dispatch(setPackNameAC(null))\n                                }\n                                console.log('Enter');\n                                dispatch(setPackNameAC(search));\n                                setSearch('');\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid\n                    item\n                    className={classes.addDeckBlock}\n                >\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={buttonClickHandler}\n                    >\n                        Add new pack\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport RangeShowCard from './RangeShowCard';\nimport PackList from './PacksList'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\n\nimport {Redirect} from \"react-router-dom\";\nimport {PATH} from \"../../Routes\";\nimport {getAllPack} from \"../../../m2-bll/redux/pack-reducer\";\nimport {GetPackQueryParamsType, UserProfileType} from \"../../../m3-dal/Api\";\nimport {Card, Paper} from \"@material-ui/core\";\nimport DeckTable from \"../../common/c8-Table/DeckTable\";\nimport Search from './Search';\nimport Typography from \"@material-ui/core/Typography\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        /*flexGrow: 1,*/\n        marginTop: \"40px\",\n    },\n    paper: {\n        margin: 'auto',\n        maxWidth: 1200,\n    },\n    filterBlock: {\n        backgroundColor: \"#ECECF9\",\n        maxWidth: \"250px\",\n        padding: \"30px\",\n        flexGrow: 1,\n    },\n    mainBlock: {\n        width: \"fit-content\",\n        flexGrow: 3,\n        margin: \"30px\",\n        maxWidth: \"950px\",\n        boxSizing : \"border-box\",\n    },\n    mainSearchBlock: {\n        /*flexGrow: 1,*/\n        marginBottom: \"20px\",\n    },\n    mainSearchHeader : {\n        marginBottom: \"20px\",\n    },\n    mainTableBlock: {\n        /*maxWidth: \"500px\",*/\n    }\n}));\n\nexport default function Pack() {\n    const classes = useStyles();\n\n    const {_id} = useSelector((state: AppStoreType) => state.auth);\n    const pack = useSelector((state: AppStoreType) => state.pack);\n    const dispatch = useDispatch();\n\n    const getAllPacks = () => {\n        let sortPacks\n        if (pack.sortField) {\n            sortPacks = +pack.isSortTypeAscending + pack.sortField;\n        }\n\n        const paramsObject: GetPackQueryParamsType = {\n            params: {\n                ...(pack.packName && {packName: pack.packName}),\n                ...(pack.min && {min: pack.min}),\n                ...(pack.max && {max: pack.max}),\n                ...(pack.page && {page: pack.page}),\n                ...(pack.pageCount && {pageCount: pack.pageCount}),\n                ...(pack.user_id && {user_id: pack.user_id}),\n                ...(sortPacks && {sortPacks: sortPacks}),\n            }\n        }\n        dispatch(getAllPack(paramsObject))\n    };\n\n    useEffect(() => {\n        getAllPacks();\n    }, []);\n\n\n    /*if (!_id) {\n        return (\n            <Redirect from={PATH.ALL_ROUTES} to=\"/login\"/>\n        )\n    }*/\n\n\n    return (\n        <div className={classes.root}>\n            <Paper\n                elevation={4}\n                className={classes.paper}\n                square={false}\n            >\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"flex-start\"\n                    alignItems=\"stretch\"\n                >\n                    <Grid\n                        item\n                        className={classes.filterBlock}\n                    >\n                        <RangeShowCard/>\n                    </Grid>\n                    <Grid\n                        item\n                        className={classes.mainBlock}\n                    >\n                        <Grid\n                            item\n                            className={classes.mainSearchBlock}\n                            alignItems={\"stretch\"}\n                        >\n                            <Typography\n                                variant={\"h2\"}\n                                className={classes.mainSearchHeader}\n                            >\n                                Packs list\n                            </Typography>\n                            <Search/>\n                        </Grid>\n                        <Grid\n                            item\n                            className={classes.mainTableBlock}\n                            alignItems={\"stretch\"}\n                        >\n                            <DeckTable/>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    );\n}\n","import { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n    createStyles({\n        head: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n        },\n        body: {\n            fontSize: 14,\n        },\n    }),\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    }),\n)(TableRow);\n\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 700,\n    },\n});\n\nexport default function CustomizedTables() {\n    const classes = useStyles();\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>Dessert (100g serving)</StyledTableCell>\n                        <StyledTableCell align=\"right\">Calories</StyledTableCell>\n                        <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\n                        <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\n                        <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <StyledTableRow key={row.name}>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\n                        </StyledTableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\n\nconst BootstrapInput = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      // fontFamily: [\n      //   '-apple-system',\n      //   'BlinkMacSystemFont',\n      //   '\"Segoe UI\"',\n      //   'Roboto',\n      //   '\"Helvetica Neue\"',\n      //   'Arial',\n      //   'sans-serif',\n      //   '\"Apple Color Emoji\"',\n      //   '\"Segoe UI Emoji\"',\n      //   '\"Segoe UI Symbol\"',\n      // ].join(','),\n      // '&:focus': {\n      //   borderRadius: 4,\n      //   borderColor: '#80bdff',\n      //   boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      // },\n    },\n  }),\n)(InputBase);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\nexport default function Pagination() {\n  const classes = useStyles();\n  const [numberPacks, setAge] = React.useState('');\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setAge(event.target.value as string);\n  };\n  return (\n      <div>\n        <Grid  container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            <Typography id=\"range-slider\" gutterBottom>\n            Show\n            </Typography>\n            <FormControl className={classes.margin}>\n            {/* <InputLabel htmlFor=\"demo-customized-select-native\">number</InputLabel> */}\n            <NativeSelect\n            id=\"demo-customized-select-native\"\n            value={numberPacks}\n            onChange={handleChange}\n            input={<BootstrapInput />}\n            >\n            <option aria-label=\"None\" value=\"\" />\n            <option value={10}>Ten</option>\n            <option value={20}>Twenty</option>\n            <option value={30}>Thirty</option>\n            </NativeSelect>\n        </FormControl>\n        <Typography id=\"range-slider\" gutterBottom>\n            Cards per Page\n        </Typography>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {TextField,Button} from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\n// import { DataGrid, GridColDef, GridValueGetterParams } from '@material-ui/data-grid';\nimport { maxHeaderSize } from 'http';\nimport Search from './Search' ;\nimport Table from './Table';\nimport Pagination from './Pagination';\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"white\",\n    padding: 32,\n      },\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n          <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" >\n\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" >\n                <Typography variant=\"h6\" gutterBottom>\n                    Cards list\n                </Typography>\n\n            </Grid>\n\n            <Grid item xs={12} className={classes.root} >\n                <Table/>\n            </Grid>\n\n            <Pagination/>\n\n          </Grid>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Maximize } from '@material-ui/icons';\nimport { maxHeaderSize } from 'http';\nimport RangeShowCard from './RangeShowCard';\nimport PackList from './PacksList'\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 5,\n    margin: 20,\n    height: 600,\n    backgroundColor: \"#988cd4\"\n      },\n\n}));\n\nexport default function Cards() {\n  const classes = useStyles();\n\n  return (\n          <div>\n\n            <Grid container direction=\"row\"  justifyContent=\"center\" alignItems=\"stretch\" className={classes.root}>\n\n                <Grid item xs={8} >\n                   <PackList/>\n                </Grid>\n\n            </Grid>\n\n          </div>\n  );\n}\n","import React from 'react'\nimport {useFormik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {PATH} from \"../Routes\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {\n    FormControl,\n    FormGroup,\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Theme,\n    createStyles,\n    Card, Typography, Link\n} from '@material-ui/core'\nimport {registrationThunk} from \"../../m2-bll/redux/auth-reducer\";\n\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    cfPassword?: string\n}\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        /*maxWidth: \"413px\",*/\n        width: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\",\n        display: \"flex\",\n        alignItems: \"\",\n    },\n    resetButton: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"stretch\",\n        marginRight: \"15px\",\n    },\n    submitButton: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"stretch\"\n    }\n}))\n\n\nconst SignupPage: React.FC = () => {\n\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const isFetching = useSelector<AppStoreType>(state => state.auth.isFetching);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            cfPassword: ''\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 7) {\n                errors.password = 'Password must be 7 characters or more'\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            // alert(JSON.stringify(values));\n            if (values.email !== '' && values.password !== '' && values.cfPassword !== '') {\n                if (values.password === values.cfPassword) {\n                    dispatch(registrationThunk(values.email, values.password))\n                    formik.resetForm();\n                }\n            }\n        },\n        // onReset: values =>  {\n        //\n        //     if (values.email !== '' || values.password !== '' || values.cfPassword !== '') {\n        //     formik.resetForm()}\n        // }\n    })\n\n    if (isFetching) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return (\n\n        <Grid container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              style={{minHeight: '100vh'}}\n        >\n            <Grid item>\n                <Card\n                    className={classes.root}\n                >\n                    <form onSubmit={formik.handleSubmit}>\n                        <Typography\n                            variant={\"h1\"}\n                            className={classes.formTitle}\n                        >It-incubator</Typography>\n                        <Typography\n                            variant={\"h2\"}\n                            className={classes.formSubtitle}\n                        >Sign up</Typography>\n                        <FormControl className={classes.displayStretch}>\n                            <FormGroup className={classes.textFieldArea}>\n                                <TextField\n                                    type=\"email\"\n                                    label=\"Email\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('email')}\n                                />\n                                {formik.touched.email && formik.errors.email &&\n                                <div style={{'color': 'red'}}>{formik.errors.email}</div>}\n\n                                <TextField\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('password')}\n                                />\n                                {formik.touched.password && formik.errors.password &&\n                                <div style={{'color': 'red'}}>{formik.errors.password}</div>}\n\n                                <TextField\n                                    type=\"password\"\n                                    label=\"Confirm password\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('cfPassword')}\n                                />\n                                {formik.touched.cfPassword && formik.errors.cfPassword &&\n                                <div style={{'color': 'red'}}>{formik.errors.cfPassword}</div>}\n                                <Typography\n                                    variant={\"body1\"}\n                                    className={classes.formDescription}\n                                    style={{marginTop: \"20px\", marginBottom: \"30px\"}}\n                                    align={\"left\"}\n                                >Enter your email address and password</Typography>\n\n                                <div className={classes.formButtonBlock}>\n                                    <Button\n                                        onClick={() => {\n                                            formik.resetForm()\n                                        }}\n                                        className={classes.resetButton}\n                                        type={'reset'}\n                                        variant={'outlined'}\n                                        color={'secondary'}\n                                    >Cancel</Button>\n                                    <Button\n                                        type={'submit'}\n                                        variant={'contained'}\n                                        className={classes.submitButton}\n                                        color={'primary'}\n                                    >Register</Button>\n                                </div>\n                                <Typography\n                                    variant={\"body1\"}\n                                    className={classes.formLinkTitle}\n                                    style={{marginTop: \"0px\", marginBottom: \"15px\"}}\n                                >Already have an account?</Typography>\n                                <Link\n                                    component={NavLink}\n                                    to={PATH.LOGIN}\n                                    color={\"textPrimary\"}\n                                >Log in here\n                                </Link>\n                            </FormGroup>\n                        </FormControl>\n                    </form>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\nexport default SignupPage","import React from 'react'\nimport {Redirect, Switch, Route} from 'react-router-dom'\nimport LoginPage from './Pages/LoginPage'\nimport ProfilePage from \"./Pages/ProfilePage\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\nimport RestorePassPage from \"./Pages/RestorePassPage\";\nimport NewPassPage from \"./Pages/NewPassPage\";\nimport TestPage from \"./Pages/TestPage\";\nimport RestorePassCheckEmailPage from \"./Pages/RestorePassCheckEmailPage\";\nimport Loading from \"./common/c7-Progress/Loading\";\nimport Packs from \"./Pages/Pack/Packs\";\nimport Cards from \"./Pages/Cards/Packs\";\nimport SignupPage from \"./Pages/SignupPage\";\n\n\n\nexport const PATH = {\n    LOGIN: '/login',\n    SIGNUP: '/signup',\n    PROFILE: '/profile',\n    NOTFOUND: '/404',\n    RESTORE_PASS: '/restore',\n    RESTORE_PASS_CHECK_EMAIL: '/check_email',\n    NEW_PASS: '/set-new-password',\n    PACK: '/pack',\n    CARDS: '/cards',\n    TEST_PAGE: '/test_page',\n    ALL_ROUTES : '*',\n}\n\nconst  Routes : React.FC = ()  => {\n\n    console.log('Routes App' )\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PROFILE*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                <Route path={PATH.LOGIN} exact render={() => <LoginPage/>}/>\n                <Route path={PATH.SIGNUP} exact render={() => <SignupPage/>}/>\n                <Route path={PATH.PROFILE} render={() => <ProfilePage/>}/>\n                <Route path={PATH.RESTORE_PASS} render={() => <RestorePassPage/>}/>\n                <Route path={PATH.RESTORE_PASS_CHECK_EMAIL} render={() => <RestorePassCheckEmailPage/>}/>\n                <Route path={PATH.NEW_PASS + '/:token'} component={NewPassPage}/>\n                {/*<Route path={PATH.DESTINATION_LIST_PAGE + '/:id'} exact={true} component={DestinationProfileContainer} />*/}\n                <Route path={PATH.TEST_PAGE} render={() => <Loading message={\"Wait a minute please\"}/>}/>\n                <Route path={PATH.PACK} render={() => <Packs/>}/>\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\n                <Route path={\"/NotFoundPage\"} render={() => <NotFoundPage/>}/>\n                <Redirect from={PATH.ALL_ROUTES} to={\"NotFoundPage\"}/>\n                {/*<Route render={() => <LoginPage/>}/>*/}\n            </Switch>\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                {/*если бы не было path={PATH.ALL_ROUTES} render={() => */}\n\n\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink, useHistory, useParams} from 'react-router-dom'\nimport s from './Header.module.css'\nimport {PATH} from \"../Routes\";\nimport {\n    AppBar,\n    Button, createStyles,\n    IconButton,\n    LinearProgress,\n    Link, List,\n    ListItem,\n    ListItemIcon, ListItemText,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport {Menu} from \"@material-ui/icons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport CardsIcon from \"../common/icons/CardsIcon\";\nimport ProfileIcon from \"../common/icons/ProfileIcon\";\nimport { logoutTC } from '../../m2-bll/redux/auth-reducer';\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        backgroundColor: \"#EBE0E9\",\n\n    },\n    listBlock : {\n        display : \"flex\",\n        flexDirection: \"row\"\n    },\n    iconBlock : {\n    },\n    menuItem: {\n        color: \"#2D2E46\",\n    }\n}))\n\nconst Header: React.FC = () => {\n    const {appStatus} = useSelector((state: AppStoreType) => state.app)\n    const history = useHistory()\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.auth.isLoggedIn)\n\n\n    return (\n        <div>\n            <AppBar\n                position=\"static\"\n                className={classes.root}\n            >\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        aria-label=\"menu\"\n                        className={classes.itemMenu}\n                    >\n                        <Menu/>\n                    </IconButton>\n                    <Typography variant=\"h1\">\n                        It-Incubator\n                    </Typography>\n                    <div>\n                        {!isLoggedIn\n                            ? <Button\n                                color=\"inherit\"\n                                className={classes.menuItem}\n                                onClick={() => history.push(PATH.LOGIN)}\n                            >Login</Button>\n                            :   <Button\n                                color=\"inherit\"\n                                className={classes.menuItem}\n                                onClick={() =>  dispatch(logoutTC())}\n                            >Log out</Button>}\n\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.SIGNUP)}\n                        >Sign up</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.PROFILE)}\n                        >Profile</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.RESTORE_PASS)}\n                        >Restore Pass</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.NEW_PASS)}\n                        >New Pass</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.TEST_PAGE)}\n                        >Test Page</Button>\n\n                        {/*------------------ add PACK and CARDS in to header -------------- */}\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.PACK)}\n                        >Packs</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.CARDS)}\n                        >Cards</Button>\n\n                       {/* -------------------------------------------------------------   */}\n\n                    </div>\n                    {/*<List\n                        component=\"nav\"\n                        aria-label=\"main mailbox folders\"\n                        className={classes.listBlock}\n                    >\n                        <ListItem button>\n                            <ListItemIcon className={classes.iconBlock}>\n                                <CardsIcon size={\"40\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Inbox\" />\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <ProfileIcon size={\"25\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Drafts\" />\n                        </ListItem>\n                    </List>*/}\n                </Toolbar>\n                {appStatus === 'loading' && <LinearProgress color={\"secondary\"}/>}\n            </AppBar>\n            {/*<nav className={s.menu}>\n                <div className={s.content}>\n                    <NavLink\n                        to={PATH.LOGIN}\n                        className={s.item}\n                    >Login</NavLink>\n                    <NavLink\n                        to={PATH.SIGNUP}\n                        className={s.item}\n                    >Sign up</NavLink>\n                    <NavLink\n                        to={PATH.PROFILE}\n                        className={s.item}\n                    >Profile</NavLink>\n                    <NavLink\n                        to={PATH.RESTORE_PASS}\n                        className={s.item}\n                    >Restore Pass</NavLink>\n                    <NavLink\n                        to={PATH.NEW_PASS}\n                        className={s.item}\n                    >New Pass</NavLink>\n                    <NavLink\n                        to={PATH.TEST_PAGE}\n                        className={s.item}\n                    >Test Page</NavLink>\n                    <div className={s.item + ' ' + s.waffel}>menu</div>\n                </div>\n            </nav>*/}\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {setAppErrorAC} from \"../../m2-bll/redux/app-reducer\";\n\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nexport function ErrorSnackbar() {\n\n    // const [open, setOpen] = React.useState(true)\n    const error = useSelector<AppStoreType, string | null >(state => state.app.error)\n   const dispatch = useDispatch()\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return\n        }\n      dispatch(setAppErrorAC(null))\n    }\n\n    const isOpen = error !== null;\n\n    return (\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n                {error}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Routes from './m1-ui/Routes';\nimport Header from \"./m1-ui/Header/Header\";\nimport {ErrorSnackbar} from \"./m1-ui/ErrorSnackbar/ErrorSnackbar\";\n\n\nfunction App() {\n    console.log('Render App')\n    return (\n        <div className=\"App\">\n            <ErrorSnackbar/>\n            <Header/>\n            <Routes/>\n            {/*commit from github.com page interface*/}\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware} from \"redux\"\nimport thunkMiddleware from 'redux-thunk'\nimport {authReducer} from \"./auth-reducer\";\nimport {appReducer} from \"./app-reducer\";\nimport {packReducer} from \"./pack-reducer\";\n\n\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    app : appReducer,\n    pack : packReducer,\n});\n\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\n// window.store = store; // for dev\n","import {createTheme} from \"@material-ui/core\";\n\nexport const muiTheme = createTheme({\n    overrides: {\n        MuiCssBaseline: {\n            '@global': {\n                body: {\n                    background: 'linear-gradient(to bottom, #EBE0E9 30%, #9A91C8 90%)',\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundAttachment: \"fixed\",\n                },\n            },\n        },\n\n        MuiButton: {\n            root: {\n                fontSize: '16px',\n                color: \"#21268F\",\n                fontFamily: 'SF UI Display, sans-serif',\n                fontWeight: 500,\n                fontStyle: \"normal\",\n                lineHeight: \"19px\",\n                borderRadius: \"30px\",\n                textTransform: \"none\",\n                padding: \"8px 16px\",\n            },\n        },\n        MuiCard: {\n            root: {\n                borderRadius : \"8px\",\n                backgroundColor : \"#F9F9FE\",\n            }\n        },\n        MuiLink: {\n            root : {\n                fontSize: '16px',\n                color: \"#21268F\",\n                fontFamily: 'SF UI Display, sans-serif',\n                fontWeight: 600,\n                fontStyle: \"normal\",\n                lineHeight: \"24px\",\n                borderRadius: \"30px\",\n            }\n        },\n        MuiTextField : {\n            root : {\n                fontWeight: 600,\n                fontFamily: 'SF UI Display, sans-serif',\n                fontStyle: \"normal\",\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                color: \"#2D2E46\",\n            }\n        },\n        MuiInput : {\n            root : {\n                fontWeight: 300,\n                fontFamily: 'SF UI Display, sans-serif',\n                fontStyle: \"normal\",\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                color: \"#2D2E46\",\n            }\n        }\n    },\n\n    typography: {\n        // Use the system font instead of the default Roboto font.\n        h1: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"26px\",\n            lineHeight: \"39px\",\n            fontFamily: \"Poppins\",\n            color: \"#2D2E46\",\n        },\n        h2: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"22px\",\n            lineHeight: \"33px\",\n            fontFamily: \"Poppins\",\n            color: \"#2D2E46\",\n        },\n        h3: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"16px\",\n            lineHeight: \"19px\",\n            fontFamily: 'SF UI Display, sans-serif',\n            color: \"#2D2E46\",\n        },\n        body1: {\n            fontWeight: 300,\n            fontStyle: \"normal\",\n            fontSize: \"16px\",\n            lineHeight: \"24px\",\n            fontFamily: 'SF UI Display, sans-serif',\n            color: \"#2D2E46\",\n            opacity: 0.6,\n        },\n        fontFamily: [\n            'Poppins',\n            'SF UI Display, sans-serif',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            light: '#b8f04a',\n            main: '#21268F',\n            dark: '#2D2E46'\n        },\n        secondary: {\n            light: '#e35ba2',\n            main: '#21268F',\n            dark: '#21268F'\n        },\n        error: {\n            main: '#ae2573',\n        },\n        warning: {\n            main: '#ffa500'\n        },\n        info: {\n            main: '#009cde',\n        },\n        text: {\n            primary: '#666666',\n            secondary: '#b3b3b3',\n        },\n    },\n\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from './n1-main/m2-bll/redux/store';\nimport {CssBaseline, MuiThemeProvider} from '@material-ui/core';\nimport {muiTheme} from \"./n1-main/m1-ui/common/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <MuiThemeProvider theme={muiTheme}>\n          <CssBaseline/>\n          <Provider store={store}>\n              <HashRouter>\n              {/*<BrowserRouter>*/}\n                  <App />\n              {/*</BrowserRouter>*/}\n              </HashRouter>\n          </Provider>\n      </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
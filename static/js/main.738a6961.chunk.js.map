{"version":3,"sources":["n1-main/m1-ui/Header/Header.module.css","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.css","n1-main/m1-ui/Pages/LoginPage.tsx","n1-main/m1-ui/Pages/SignupPage.tsx","n1-main/m1-ui/Pages/ProfilePage.tsx","n1-main/m1-ui/Pages/NotFoundPage.tsx","n1-main/m1-ui/Pages/RestorePassPage.tsx","n1-main/m1-ui/Pages/NewPassPage.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/redux/auth-reducer.ts","n1-main/m1-ui/Pages/TestPage.tsx","n1-main/m1-ui/Routes.tsx","n1-main/m1-ui/Header/Header.tsx","n1-main/App.tsx","reportWebVitals.ts","n1-main/m2-bll/redux/store.ts","index.tsx"],"names":["module","exports","LoginPage","SignupPage","ProfilePage","NotFoundPage","RestorePassPage","NewPassPage","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","container","checked","checkmark","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","chosenOption","target","SuperRadio","name","onChangeCallback","radioInputStyle","initState","isLoggedIn","TestPage","useSelector","state","auth","dispatch","useDispatch","console","log","onClick","PATH","Routes","path","exact","render","to","Header","menu","content","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.738a6961.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Header_menu__2YJAn\",\"content\":\"Header_content__3e9g1\",\"item\":\"Header_item__3LvB1\",\"a\":\"Header_a__3wFX6\",\"waffel\":\"Header_waffel__1VlyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2muhy\",\"container\":\"SuperCheckbox_container__1qxtf\",\"checkmark\":\"SuperCheckbox_checkmark__IPOjb\",\"spanClassName\":\"SuperCheckbox_spanClassName__1tKvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3fjB9\",\"errorInput\":\"SuperInputText_errorInput__19bQO\",\"error\":\"SuperInputText_error__eSWV4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__18KF3\",\"red\":\"SuperButton_red__2jjA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"SuperRadio_column__Xhe2L\",\"superSelectBlock\":\"SuperRadio_superSelectBlock__2sxHw\",\"superRadioBlock\":\"SuperRadio_superRadioBlock__2hx18\",\"radioInputStyle\":\"SuperRadio_radioInputStyle__1sHEZ\"};","import React from 'react'\n\nconst LoginPage : React.FC = () => {\n    return (\n        <>\n            <h1>Login</h1>\n        </>\n    )\n}\nexport default LoginPage","import React from 'react'\n\nconst SignupPage : React.FC = () => {\n    return (\n        <>\n            <h1>Sign up</h1>\n        </>\n    )\n}\nexport default SignupPage","import React from 'react'\n\nconst ProfilePage : React.FC = () => {\n    return (\n        <>\n            <h1>Profile</h1>\n        </>\n    )\n}\nexport default ProfilePage\n","import React from 'react'\n\nconst NotFoundPage : React.FC = () => {\n    return (\n        <>\n            <h1>Not found page</h1>\n        </>\n    )\n}\nexport default NotFoundPage","import React from 'react'\n\nconst RestorePassPage : React.FC = () => {\n    return (\n        <>\n            <h1>Restore Password</h1>\n        </>\n    )\n}\nexport default RestorePassPage","import React from 'react'\n\nconst NewPassPage : React.FC = () => {\n    return (\n        <>\n            <h1>New Password</h1>\n        </>\n    )\n}\nexport default NewPassPage","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className,\n        spanClassName,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${error ? s.error : ''} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className ? className : ''} ${s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n    //const finalInputClassName = `${ error ? s.errorInput : ''} ${ className ? className : ''} ${s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n\n    }\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.container}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.checkmark}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../c1-SuperInputText/SuperInputText'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${restProps.spanClassName ? restProps.spanClassName : ''} ${className ? className : ''}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map((o: any, i) => (\n        <option key={i} value={o}>{o}</option>\n    )) : []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        const chosenOption = e.target.value\n        if (chosenOption) {\n            onChangeOption && onChangeOption(chosenOption)\n        }\n    }\n\n    return (\n        <select value={restProps.value} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        const chosenOption = e.target.value\n        if (chosenOption) {\n            onChangeOption && onChangeOption(chosenOption)\n        }\n    }\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        // map options with key\n        <label key={name + '-' + i} className={s.radioInputStyle}>\n            <input\n                type={'radio'}\n                name={'superRadio'}\n                value={o}\n                onChange={onChangeCallback}\n                checked={value === o ? true : false}\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","\n\nconst initState = {\n    isLoggedIn : false\n};\n\nexport type InitialStateType  = typeof initState\n\nexport const authReducer = (state = initState, action: CombinedActionType): InitialStateType => { // fix any\n    switch (action.type) {\n        case \"IS-LOGGED-IN\": {\n            return {...state, isLoggedIn: action.value};\n        }\n        default: return state;\n    }\n};\n\nexport type LoggedInType = {\n    type : 'IS-LOGGED-IN'\n    value : boolean\n}\n\ntype CombinedActionType = LoggedInType\n\nexport const loggedInAC = (value : boolean): LoggedInType => ({ type : \"IS-LOGGED-IN\", value });\n\n","import React from 'react'\nimport SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperEditableSpan from \"../common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperSelect from \"../common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"../common/c6-SuperRadio/SuperRadio\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {loggedInAC} from \"../../m2-bll/redux/auth-reducer\";\n\nconst TestPage: React.FC = () => {\n    const isLoggedIn = useSelector((state: AppStoreType) => (state.auth.isLoggedIn))\n    const dispatch = useDispatch();\n    const handleTestButton = () => {\n        dispatch(loggedInAC(!isLoggedIn))\n    }\n    console.log(isLoggedIn)\n    return (\n        <>\n            <h1>Test page</h1>\n            <p>Is Logged In : {isLoggedIn ? <span>True</span> : <span>False</span>}</p>\n            <SuperInputText/>\n            <br/>\n            <SuperButton onClick={handleTestButton}>Test button</SuperButton>\n            <div>\n                <SuperCheckbox>Some checkbox 1</SuperCheckbox>\n                <SuperCheckbox checked={true}>Some checkbox 1</SuperCheckbox>\n                <SuperCheckbox checked={false}>Some checkbox 2</SuperCheckbox>\n            </div>\n            <SuperEditableSpan></SuperEditableSpan>\n            <SuperSelect></SuperSelect>\n            <SuperRadio options={[\"options1\", \"options2\"]}></SuperRadio>\n        </>\n    )\n}\nexport default TestPage","import React from 'react'\nimport {Redirect, Switch, Route} from 'react-router-dom'\nimport LoginPage from './Pages/LoginPage'\nimport SignupPage from \"./Pages/SignupPage\";\nimport ProfilePage from \"./Pages/ProfilePage\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\nimport RestorePassPage from \"./Pages/RestorePassPage\";\nimport NewPassPage from \"./Pages/NewPassPage\";\nimport TestPage from \"./Pages/TestPage\";\n\n\n\nexport const PATH = {\n    LOGIN: '/login',\n    SIGNUP: '/signup',\n    PROFILE: '/profile',\n    NOTFOUND: '/404',\n    RESTORE_PASS: '/restore',\n    NEW_PASS: '/newpassword',\n    TEST_PAGE: '/test_page',\n    ALL_ROUTES : '*',\n}\n\nconst  Routes : React.FC = ()  => {\n\n    console.log('Routes App' )\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                <Route path={PATH.LOGIN} exact render={() => <LoginPage/>}/>\n                <Route path={PATH.SIGNUP} exact render={() => <SignupPage/>}/>\n                <Route path={PATH.PROFILE} render={() => <ProfilePage/>}/>\n                <Route path={PATH.NOTFOUND} render={() => <NotFoundPage/>}/>\n                <Route path={PATH.RESTORE_PASS} render={() => <RestorePassPage/>}/>\n                <Route path={PATH.NEW_PASS} render={() => <NewPassPage/>}/>\n                <Route path={PATH.TEST_PAGE} render={() => <TestPage/>}/>\n                <Route path={PATH.ALL_ROUTES} render={() => <TestPage/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <LoginPage/>}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport s from './Header.module.css'\nimport {PATH} from \"../Routes\";\n\nfunction Header() {\n    return (\n        <div>\n\n            <nav className={s.menu}>\n                <div className={s.content}>\n                    <NavLink\n                        to={PATH.LOGIN}\n                        className={s.item}\n                    >Login</NavLink>\n                    <NavLink\n                        to={PATH.PROFILE}\n                        className={s.item}\n                    >Profile</NavLink>\n                    <NavLink\n                        to={PATH.RESTORE_PASS}\n                        className={s.item}\n                    >Restore Pass</NavLink>\n                    <NavLink\n                        to={PATH.NEW_PASS}\n                        className={s.item}\n                    >New Pass</NavLink>\n                    <NavLink\n                        to={PATH.TEST_PAGE}\n                        className={s.item}\n                    >Test Page</NavLink>\n                    {/*<div className={s.item + ' ' + s.waffel}>menu</div>*/}\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport './App.css';\nimport Routes from './m1-ui/Routes';\nimport Header from \"./m1-ui/Header/Header\";\n\nfunction App() {\n    console.log('Render App' )\n  return (\n    <div className=\"App\">\n        <Header/>\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\nimport {authReducer} from \"./auth-reducer\";\n\nconst reducers = combineReducers({\n    auth: authReducer,\n});\n\nconst store = createStore(reducers);\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\n// window.store = store; // for dev\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from './n1-main/m2-bll/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <HashRouter>\n          {/*<BrowserRouter>*/}\n              <App />\n          {/*</BrowserRouter>*/}\n          </HashRouter>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["n1-main/m3-dal/Api.tsx","n1-main/m2-bll/redux/profile-reducer.ts","n1-main/m2-bll/redux/auth-reducer.ts","n1-main/m1-ui/Pages/LoginPage.tsx","n1-main/m1-ui/Pages/signupPage/signupReducer.ts","n1-main/m1-ui/Pages/signupPage/SignupPage.tsx","n1-main/m1-ui/Pages/ProfilePage.tsx","n1-main/m1-ui/Pages/NotFoundPage.tsx","n1-main/m2-bll/redux/app-reducer.ts","n1-main/m2-bll/redux/restore-pass-reducer.ts","n1-main/m1-ui/common/icons/LoadingIcon.tsx","n1-main/m1-ui/common/c7-Progress/Loading.tsx","n1-main/m1-ui/Pages/RestorePassPage.tsx","n1-main/m1-ui/Pages/NewPassPage.tsx","n1-main/m1-ui/common/icons/MessageIcon.tsx","n1-main/m1-ui/Pages/RestorePassCheckEmailPage.tsx","n1-main/m1-ui/Routes.tsx","n1-main/m1-ui/Header/Header.tsx","n1-main/App.tsx","reportWebVitals.ts","n1-main/m2-bll/redux/store.ts","n1-main/m1-ui/common/theme.ts","index.tsx"],"names":["instance","axios","create","baseURL","withCredentials","acsessAPI","email","password","rememberMe","post","e","response","data","error","message","from","resetPasswordToken","initState","_id","name","avatar","publicCardPacksCount","isLoggedIn","loggedInAC","value","type","useStyles","makeStyles","theme","createStyles","root","textAlign","padding","width","formTitle","marginBottom","formSubtitle","formDescription","formButtonBlock","margin","displayStretch","display","alignItems","textFieldArea","LoginPage","classes","dispatch","useDispatch","useSelector","state","auth","restoreSchema","Yup","shape","required","formik","useFormik","initialValues","remember","validationSchema","onSubmit","values","then","res","catch","rej","resetForm","to","Grid","container","justify","style","minHeight","item","Card","className","handleSubmit","Typography","variant","FormControl","FormGroup","TextField","label","getFieldProps","touched","errors","color","align","FormControlLabel","control","Checkbox","Button","formLinkTitle","marginTop","Link","component","NavLink","PATH","SIGNUP","initialState","isFetching","signupAC","paddingTop","paddingBottom","resetButton","flex","marginRight","submitButton","SignupPage","signup","cfPassword","validate","test","length","LOGIN","justifyContent","onClick","ProfilePage","userProfile","profile","xs","src","ALL_ROUTES","NotFoundPage","errorMessage","appStatus","setMessageErrorAC","setAppStatusAC","isPassRequestSent","isPassChanged","setPassRequestAC","LoadingIcon","size","xmlns","height","viewBox","fill","d","maxWidth","loadingTitle","loadingMessage","Loading","props","RestorePassPage","passRestore","app","console","log","success","status","request","RESTORE_PASS_CHECK_EMAIL","errorBlock","NewPassPage","useState","showPassword","setShowPassword","token","useParams","min","matches","Input","placeholder","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","MessageIcon","id","x1","x2","y1","y2","gradientUnits","offset","stopColor","stopOpacity","opacity","cx","cy","rx","ry","transform","formIcon","PROFILE","NOTFOUND","RESTORE_PASS","NEW_PASS","TEST_PAGE","Routes","path","exact","render","RestorePassCheckEmailPage","backgroundColor","listBlock","flexDirection","iconBlock","menuItem","Header","history","useHistory","AppBar","Toolbar","itemMenu","Menu","push","LinearProgress","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","muiTheme","createTheme","overrides","MuiCssBaseline","body","background","backgroundRepeat","backgroundAttachment","MuiButton","fontSize","fontFamily","fontWeight","fontStyle","lineHeight","borderRadius","textTransform","MuiCard","MuiLink","MuiTextField","MuiInput","typography","h1","h2","body1","join","palette","primary","light","main","dark","secondary","warning","info","text","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.627fcaa4.chunk.js","sourcesContent":["import axios from 'axios'\nimport {UserProfileType} from '../m2-bll/redux/profile-reducer';\n\nconst settings = {\n    withCredentials: true\n};\nconst instance = axios.create({\n    /*baseURL: 'http://localhost:7542/2.0/',*/\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\n    ...settings\n})\n\n// api\n\nexport type UserLoginType = {\n    _id: string;\n    email: string,\n    name: string,\n    avatar?: string,\n    publicCardPacksCount: number\n}\n\ntype registrationUserType = {\n    addedUser: {}\n    error?: string\n}\n\nexport type UserForgotPassType = {\n    info: string\n    success: boolean\n    answer: boolean\n    html: boolean\n}\nexport type UserNewPasswordType = {\n    info: string\n}\n\nexport const acsessAPI = {\n    loginUser(email: string, password: string, rememberMe: boolean) {\n        try {\n            const promise = instance.post<UserProfileType>(\"/auth/login\", {email, password, rememberMe});\n            return promise\n        } catch (e) {\n            const error = e.response ?\n                e.response.data.error :\n                (e.message + ', more details in the console');\n        }\n    },\n    registrationUser(email: string, password: string) {\n        const promise = instance.post<registrationUserType>(\"/auth/register\", {email, password})\n        return promise\n    },\n    forgotPassword(email: string, from: string, message: string) {\n        return instance.post<UserForgotPassType>(\"/auth/forgot\", {email, from, message});\n    },\n    setNewPassword(password: string, resetPasswordToken: string) {\n        return instance.post<UserNewPasswordType>(\"/auth/set-new-password\", {password, resetPasswordToken});\n    },\n}\n\n\n\n\n\n\n","import {acsessAPI} from \"../../m3-dal/Api\";\nimport {Dispatch} from 'redux';\n\nexport type UserProfileType = {\n    _id:string;\n    email: string,\n    name: string,\n    avatar?: string,\n    publicCardPacksCount: number\n}\n\nconst initState:UserProfileType = {_id:\"\",\n                                    email: \"\",\n                                    name: \"\",\n                                    avatar: \"\",\n                                    publicCardPacksCount: 0};\n\nexport const profileReducer = (state = initState, action: profileACType): UserProfileType => {\n    switch (action.type) {\n        case \"ADD-PROFILE\": {\n            return {...state, ...action.value};\n        }\n        default:\n            return state;\n    }\n};\n\nexport type profileACType = {\n    type: 'ADD-PROFILE'\n    value: UserProfileType\n}\n\n// type CombinedActionType = LoggedInType\n\nexport const profileAC = (value: UserProfileType): profileACType => ({type: \"ADD-PROFILE\", value});\n\n// thunks-------------------------------------------------------------------\n\n// export const loggedInTC = (email: string, password: string, rememberMe: boolean) => {\n//     return (dispatch: Dispatch<any>) => {\n//         //@ts-ignore\n//         acsessAPI.loginUser(email, password, rememberMe)\n//             .then((res) => {\n//                 console.log(res.data)\n//                 dispatch(loggedInAC(true, \"\"))\n//             }).catch(rej => {\n//             dispatch(loggedInAC(false, rej.response.data.error))\n//         })\n//     }\n// }\n","import {acsessAPI} from \"../../m3-dal/Api\";\nimport {Dispatch} from 'redux';\nimport {profileAC} from './profile-reducer';\n\ntype InitStateType = { isLoggedIn: boolean, error: string };\n\nconst initState = {isLoggedIn: false, error: \"\"};\n\nexport const authReducer = (state = initState, action: CombinedActionType): InitStateType => {\n    switch (action.type) {\n        case \"IS-LOGGED-IN\": {\n            return {...state, isLoggedIn: action.value, error: action.error};\n        }\n        default:\n            return state;\n    }\n};\n\nexport type LoggedInType = {\n    type: 'IS-LOGGED-IN'\n    value: boolean\n    error: string\n}\n\ntype CombinedActionType = LoggedInType\n\nexport const loggedInAC = (value: boolean, error: string): LoggedInType => ({type: \"IS-LOGGED-IN\", value, error});\n\n// thunks-------------------------------------------------------------------\n\nexport const loggedInTC = (email: string, password: string, rememberMe: boolean) => {\n    return (dispatch: Dispatch<any>) => {\n        //@ts-ignore\n        acsessAPI.loginUser(email, password, rememberMe)\n            .then((res) => {\n                dispatch(profileAC(res.data))\n                dispatch(loggedInAC(true, \"\"))\n            }).catch(rej => {\n                // как проверить чтобы ошибка не падала ignat\n                // if (rej.response.data){\n            dispatch(loggedInAC(false, rej.response.data.error))}\n        // }\n        )\n    }\n}\n","import React from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {\n    Button, Card, createStyles, FormControl, FormGroup, Checkbox,\n    Grid, makeStyles, TextField, Theme, Typography, FormControlLabel, Link\n} from \"@material-ui/core\";\nimport {loggedInTC} from \"../../m2-bll/redux/auth-reducer\";\nimport {PATH} from \"../Routes\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        width: \"413px\",\n        /*maxWidth : \"413px\",*/\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        /*marginTop : \"20px\",*/\n        marginBottom: \"40px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\"\n    },\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    }\n}))\n\n\ntype FormikErrorType = { email?: string }\n\nconst LoginPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\n\n    const restoreSchema = Yup.object().shape({\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            remember: false\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            dispatch(loggedInTC(values.email, values.password, values.remember))\n            formik.resetForm()\n        },\n    })\n\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n\n    return <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Grid item>\n            <Card className={classes.root}>\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-Incubator\n                    </Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Signin</Typography>\n                    <FormControl className={classes.displayStretch}>\n                        <FormGroup className={classes.textFieldArea}>\n                            <TextField\n                                type=\"email\"\n                                label=\"Email\"\n                                margin=\"dense\"\n                                {...formik.getFieldProps('email')}\n                            />\n                            {formik.touched.email && formik.errors.email &&\n                            <div style={{color: 'red'}}>{formik.errors.email}</div>\n                            }\n                            <TextField\n                                type=\"password\"\n                                label=\"password\"\n                                margin=\"dense\"\n                                {...formik.getFieldProps('password')}\n                            />\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >Enter your email address and password\n                            </Typography>\n\n                            <FormControlLabel\n                                label={'Remember me'}\n                                control={<Checkbox/>}\n                                // onChange={changeRememberCheckboxHandler}\n                                {...formik.getFieldProps('remember')}\n                            />\n\n                            {/*-----value less then------------------------*/}\n                            {formik.touched.password && formik.errors.password &&\n                            <div style={{color: 'red'}}>{formik.errors.password}</div>\n                            }\n                            {/*-----------------------------*/}\n\n\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>Login</Button>\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formLinkTitle}\n                                style={{ marginTop : \"30px\", marginBottom : \"15px\"}}\n                            >Don't have an account</Typography>\n                            <Link\n                                component={NavLink}\n                                to={PATH.SIGNUP}\n                                color={\"textPrimary\"}\n                            >Sign up\n                            </Link>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Card>\n        </Grid>\n    </Grid>\n}\nexport default LoginPage\n\n\n","import {Dispatch} from \"redux\";\nimport {acsessAPI} from \"../../../m3-dal/Api\";\n\n\nconst initialState = {\n    email: '',\n    password: '',\n    error: '',\n    isFetching: false\n};\n\nexport const signupReducer = (state: initialStateType = initialState, action: signupReducerActionTypes): initialStateType => {\n    switch (action.type) {\n        case \"SIGN_UP\":\n            return {\n                ...state,\n                email: action.email,\n                password: action.password,\n                error: action.message as string,\n            };\n        case \"IS_FETCHING\":\n            return {\n                ...state, isFetching: action.isFetching\n            }\n\n        default:\n            return state\n    }\n}\n\n\n// Action creators\n\nexport const signupAC = (email: string, password: string, message?: string) =>\n    ({type: 'SIGN_UP', email, password, message} as const);\n\nexport const setIsFetchingSignupAC = (isFetching: boolean) =>\n    ({type: 'IS_FETCHING', isFetching }as const);\n\ntype initialStateType = typeof initialState;\n\nexport type signupReducerActionTypes = SignupActionType | SetIsFetchingSignupActionType;\ntype SignupActionType = ReturnType<typeof signupAC>;\ntype SetIsFetchingSignupActionType = ReturnType<typeof setIsFetchingSignupAC>;\n\n// Thunk\n\nexport const registrationThunk = (email: string, password: string) => {\n    return (dispatch: Dispatch) => {\n        acsessAPI.registrationUser(email, password)\n            .then(() => {\n                dispatch(signupAC(email, password));\n                dispatch(setIsFetchingSignupAC(true));\n\n            })\n            .catch(error => {\n                const message = error.response.data.error\n                dispatch(signupAC(email, password, message))\n            })\n    }\n}\n\n\n","import React from 'react'\nimport {useFormik} from \"formik\";\nimport {registrationThunk} from \"./signupReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {NavLink, Redirect} from 'react-router-dom';\nimport {PATH} from \"../../Routes\";\nimport {AppStoreType} from \"../../../m2-bll/redux/store\";\nimport {\n    FormControl,\n    FormGroup,\n    FormLabel,\n    TextField,\n    Button,\n    Grid,\n    makeStyles,\n    Theme,\n    createStyles,\n    Card, Typography, Link\n} from '@material-ui/core'\n\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    cfPassword?: string\n}\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        /*maxWidth: \"413px\",*/\n        width: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\",\n        display: \"flex\",\n        alignItems: \"\",\n    },\n    resetButton: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"stretch\",\n        marginRight: \"15px\",\n    },\n    submitButton: {\n        flex: 1,\n        display: \"flex\",\n        alignItems: \"stretch\"\n    }\n}))\n\n\nconst SignupPage: React.FC = () => {\n\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const isFetching = useSelector<AppStoreType>(state => state.signup.isFetching);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            cfPassword: ''\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length < 7) {\n                errors.password = 'Password must be 7 characters or more'\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            // alert(JSON.stringify(values));\n            if (values.email !== '' && values.password !== '' && values.cfPassword !== '') {\n                if (values.password === values.cfPassword) {\n                    dispatch(registrationThunk(values.email, values.password))\n                    formik.resetForm();\n                }\n            }\n        },\n        // onReset: values =>  {\n        //\n        //     if (values.email !== '' || values.password !== '' || values.cfPassword !== '') {\n        //     formik.resetForm()}\n        // }\n    })\n\n    if (isFetching) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return (\n\n        <Grid container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              style={{minHeight: '100vh'}}\n        >\n            <Grid item>\n                <Card\n                    className={classes.root}\n                >\n                    <form onSubmit={formik.handleSubmit}>\n                        <Typography\n                            variant={\"h1\"}\n                            className={classes.formTitle}\n                        >It-incubator</Typography>\n                        <Typography\n                            variant={\"h2\"}\n                            className={classes.formSubtitle}\n                        >Sign up</Typography>\n                        <FormControl className={classes.displayStretch}>\n                            <FormGroup className={classes.textFieldArea}>\n                                <TextField\n                                    type=\"email\"\n                                    label=\"Email\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('email')}\n                                />\n                                {formik.touched.email && formik.errors.email &&\n                                <div style={{'color': 'red'}}>{formik.errors.email}</div>}\n                                <TextField\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('password')}\n                                />\n                                {formik.touched.password && formik.errors.password &&\n                                <div style={{'color': 'red'}}>{formik.errors.password}</div>}\n                                <TextField\n                                    type=\"password\"\n                                    label=\"Confirm password\"\n                                    margin=\"dense\"\n                                    {...formik.getFieldProps('cfPassword')}\n                                />\n                                {formik.touched.cfPassword && formik.errors.cfPassword &&\n                                <div style={{'color': 'red'}}>{formik.errors.cfPassword}</div>}\n                                <Typography\n                                    variant={\"body1\"}\n                                    className={classes.formDescription}\n                                    style={{marginTop: \"20px\", marginBottom: \"30px\"}}\n                                    align={\"left\"}\n                                >Enter your email address and password</Typography>\n\n                                <div className={classes.formButtonBlock}>\n                                    <Button\n                                        onClick={() => {\n                                            formik.resetForm()\n                                        }}\n                                        className={classes.resetButton}\n                                        type={'reset'}\n                                        variant={'outlined'}\n                                        color={'secondary'}\n                                    >Cancel</Button>\n                                    <Button\n                                        type={'submit'}\n                                        variant={'contained'}\n                                        className={classes.submitButton}\n                                        color={'primary'}\n                                    >Register</Button>\n                                </div>\n                                <Typography\n                                    variant={\"body1\"}\n                                    className={classes.formLinkTitle}\n                                    style={{marginTop: \"0px\", marginBottom: \"15px\"}}\n                                >Already have an account?</Typography>\n                                <Link\n                                    component={NavLink}\n                                    to={PATH.LOGIN}\n                                    color={\"textPrimary\"}\n                                >Log in here\n                                </Link>\n                            </FormGroup>\n                        </FormControl>\n                    </form>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\nexport default SignupPage","\nimport React, {useState} from 'react'\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button, Grid} from '@material-ui/core'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loggedInTC} from \"../../m2-bll/redux/auth-reducer\"\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {Redirect} from \"react-router-dom\";\nimport {PATH} from \"../Routes\";\n\n// commit\n\nexport const ProfilePage: React.FC = () => {\n\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppStoreType, any>(state => state.auth)\n    const userProfile = useSelector<AppStoreType, any>(state => state.profile)\n\n\n\n    if (isLoggedIn.isLoggedIn) {\n        return (\n            <Grid container justify=\"center\">\n                <Grid item xs={4}>\n                    <h1>User profile</h1>\n                    <h3>Id {userProfile._id}</h3>\n                    <h3>Email {userProfile.email}</h3>\n                    <h3>Name {userProfile.name}</h3>\n                    <h3>Avatar <img src={userProfile.avatar} style={{width: 100}}/> </h3>\n                    <h3>PublicCardPacksCount= {userProfile.publicCardPacksCount}</h3>\n\n                </Grid>\n            </Grid>\n        )\n    } else {\n        return  (\n            <Redirect from={PATH.ALL_ROUTES} to=\"/login\"/>\n            )\n    }\n}\n\nexport default ProfilePage\n\n\n","import React from 'react'\n\nconst NotFoundPage : React.FC = () => {\n    return (\n        <>\n            <h1>Not found page</h1>\n        </>\n    )\n}\nexport default NotFoundPage","type InitStateType = {\n    errorMessage: string | null\n    appStatus: AppStatusType\n};\n\nconst initState: InitStateType = {\n    errorMessage: null,\n    appStatus: 'idle'\n};\nexport type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\nexport type CombinedActionType = SetMessageErrorActionType | SetAppStatusType\n\nexport const appReducer = (state = initState, action: CombinedActionType): InitStateType => {\n    switch (action.type) {\n        case \"APP/SET-ERROR-MESSAGE\": {\n            return {...state, errorMessage: action.errorMessage}\n        }\n        case \"APP/SET-APP-STATUS\" : {\n            return {...state, appStatus: action.value}\n        }\n        default:\n            return state;\n    }\n};\n\n\nexport const setMessageErrorAC = (errorMessage: string) => ({type: \"APP/SET-ERROR-MESSAGE\", errorMessage} as const)\nexport const setAppStatusAC = (value: AppStatusType) => ({type: \"APP/SET-APP-STATUS\", value} as const);\n\nexport type SetMessageErrorActionType = ReturnType<typeof setMessageErrorAC>\nexport type SetAppStatusType = ReturnType<typeof setAppStatusAC>\n","import {Dispatch} from \"redux\";\nimport {setAppStatusAC, setMessageErrorAC} from \"./app-reducer\";\nimport {acsessAPI} from \"../../m3-dal/Api\";\n\ntype InitStateType = {\n    isPassRequestSent: boolean\n    isPassChanged: boolean\n};\n\nconst initState: InitStateType = {\n    isPassRequestSent: false,\n    isPassChanged: false,\n};\n\ntype CombinedActionType = SetPassRequestType | SetPassChangedType\n\n\nexport const passRestoreReducer = (state = initState, action: CombinedActionType): InitStateType => {\n    switch (action.type) {\n        case \"RESTORE/SET-PASS-REQUEST\" : {\n            return {...state, isPassRequestSent: action.value}\n        }\n        case \"RESTORE/SET-PASS-CHANGED\" : {\n            return {...state, isPassChanged: action.value}\n        }\n        default:\n            return state;\n    }\n};\n\nexport const setPassRequestAC = (value: boolean) => ({type: \"RESTORE/SET-PASS-REQUEST\", value} as const);\nexport const setPassChangedAC = (value: boolean) => ({type: \"RESTORE/SET-PASS-CHANGED\", value} as const);\n\nexport type SetPassRequestType = ReturnType<typeof setPassRequestAC>\nexport type SetPassChangedType = ReturnType<typeof setPassChangedAC>\n\n\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\n\n    return (dispatch: Dispatch<any>) => {\n        dispatch(setAppStatusAC('loading'))\n        acsessAPI.setNewPassword(password, resetPasswordToken)\n            .then((res) => {\n                if (res.status === 200) {\n                    dispatch(setPassChangedAC(true))\n                    dispatch(setAppStatusAC('succeeded'))\n                }\n            })\n            .catch(error => {\n                dispatch(setAppStatusAC('failed'))\n                if (error.response && error.response.status) {\n                    if (error.response?.data?.error) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                    } else {\n                        dispatch(setMessageErrorAC('Something went wrong'))\n                    }\n                } else {\n                    dispatch(setMessageErrorAC('Something went wrong'))\n                }\n            })\n    }\n}\n\nexport const forgotPassTC = (email: string) => {\n\n    return (dispatch: Dispatch<any>) => {\n        dispatch(setAppStatusAC('loading'))\n        const from = \"santari33@gmail.com\";\n        const message = \"<div>password recovery link: <a href='https://maunonen.github.io/it-incubator-ignat-project/#/set-new-password/$token$'>link</a></div>\";\n\n        acsessAPI.forgotPassword(email, from, message)\n            .then((res) => {\n                console.log('Thunk', res)\n                if (res.data.success) {\n                    dispatch(setPassRequestAC(true))\n                    dispatch(setAppStatusAC('succeeded'))\n                }\n            })\n            .catch(error => {\n                console.log('Thunk error', error)\n                dispatch(setAppStatusAC('failed'))\n                if (error.response && error.response.status) {\n                    dispatch(setMessageErrorAC(error.response.data.error))\n                    dispatch(setPassRequestAC(false))\n                    /*if (error.response.status === 404) {\n                        // Request made and server responded\n                        /!*console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);*!/\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n\n                    } else if (error.response.status === 400) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n                    } else if (error.response.status === 500) {\n                        dispatch(setMessageErrorAC(error.response.data.error))\n                        dispatch(setPassRestoredAC(false))\n                    }*/\n                } else {\n                    dispatch(setMessageErrorAC(\"Something went wrong\"))\n                    dispatch(setPassRequestAC(false))\n                    if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                    }\n                }\n            })\n    }\n}\n","import React from \"react\";\n\nexport interface MessageIconPropsType {\n    size?: string\n}\n\nconst LoadingIcon: React.FC<MessageIconPropsType> = ({size}) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={size}\n            height={size}\n            viewBox=\"0 0 512 512\"\n        >\n            <path\n                fill=\"#6e75e2\"\n                d=\"M30 256C30 131.383 131.383 30 256 30c46.867 0 91.563 14.211 129.196 40.587h-29.074c-8.284 0-15 6.716-15 15s6.716 15 15 15h70.292c8.284 0 15-6.716 15-15V15.295c0-8.284-6.716-15-15-15s-15 6.716-15 15v37.339C366.987 18.499 312.91 0 256 0 187.62 0 123.333 26.629 74.98 74.98 26.629 123.333 0 187.62 0 256c0 44.921 11.871 89.182 34.33 127.998 2.78 4.806 7.818 7.49 12.997 7.49 2.55 0 5.134-.651 7.499-2.019 7.17-4.149 9.619-13.325 5.471-20.496C40.477 334.718 30 295.652 30 256zM477.67 128.002c-4.15-7.171-13.328-9.619-20.496-5.47-7.17 4.149-9.619 13.325-5.471 20.496C471.523 177.281 482 216.346 482 256c0 124.617-101.383 226-226 226-46.863 0-91.551-14.215-129.18-40.587h29.058c8.284 0 15-6.716 15-15s-6.716-15-15-15H85.587c-8.284 0-15 6.716-15 15v70.292c0 8.284 6.716 15 15 15s15-6.716 15-15v-37.376C145.013 493.475 199.083 512 256 512c68.38 0 132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256c0-44.923-11.871-89.184-34.33-127.998z\"\n            ></path>\n            <path\n                fill=\"#e2dff4\"\n                d=\"M377.424 285.689l-13.599-7.852c1.446-7.162 2.175-14.469 2.175-21.838s-.729-14.676-2.175-21.838l13.599-7.852a15.001 15.001 0 005.49-20.49l-20-34.641c-4.142-7.174-13.315-9.632-20.49-5.49l-13.602 7.853a108.886 108.886 0 00-37.821-21.856V136c0-8.284-6.716-15-15-15h-40c-8.284 0-15 6.716-15 15v15.686a108.89 108.89 0 00-37.822 21.856l-13.601-7.853c-7.174-4.144-16.349-1.685-20.49 5.49l-20 34.641c-4.142 7.174-1.684 16.348 5.49 20.49l13.598 7.851c-1.446 7.163-2.176 14.47-2.176 21.838s.729 14.676 2.176 21.838l-13.598 7.851c-7.174 4.142-9.632 13.316-5.49 20.49l20 34.641c4.142 7.175 13.315 9.633 20.49 5.49l13.601-7.853a108.865 108.865 0 0037.822 21.856V376c0 8.284 6.716 15 15 15h40c8.284 0 15-6.716 15-15v-15.686a108.886 108.886 0 0037.821-21.856l13.602 7.853c7.174 4.142 16.348 1.683 20.49-5.49l20-34.641a15.003 15.003 0 00-5.49-20.491zM256 296c-22.091 0-40-17.909-40-40s17.909-40 40-40 40 17.909 40 40-17.909 40-40 40z\"\n            ></path>\n            <path\n                fill=\"#bebcdd\"\n                d=\"M384.413 217.203a14.994 14.994 0 00-1.499-11.382l-20-34.641c-4.142-7.174-13.315-9.632-20.49-5.49l-13.602 7.853a108.886 108.886 0 00-37.821-21.856V136c0-8.284-6.716-15-15-15H256v95c22.091 0 40 17.909 40 40s-17.909 40-40 40v95h20.001c8.284 0 15-6.716 15-15v-15.686a108.886 108.886 0 0037.821-21.856l13.602 7.853c7.174 4.142 16.348 1.683 20.49-5.49l20-34.641a15.003 15.003 0 001.499-11.382 14.994 14.994 0 00-6.989-9.108l-13.599-7.852C365.271 270.676 366 263.369 366 256s-.729-14.676-2.175-21.838l13.599-7.852a14.995 14.995 0 006.989-9.107z\"\n            ></path>\n            <path\n                fill=\"#f1f1f4\"\n                d=\"M256 311c-30.327 0-55-24.673-55-55s24.673-55 55-55 55 24.673 55 55-24.673 55-55 55zm0-80c-13.785 0-25 11.215-25 25s11.215 25 25 25 25-11.215 25-25-11.215-25-25-25z\"\n            ></path>\n            <path\n                fill=\"#e2dff4\"\n                d=\"M281 256c0 13.785-11.215 25-25 25v30c30.327 0 55-24.673 55-55s-24.673-55-55-55v30c13.785 0 25 11.215 25 25z\"\n            ></path>\n            <g fill=\"#525cdd\">\n                <path\n                    d=\"M426.413.295c-8.284 0-15 6.716-15 15v37.339C366.987 18.499 312.91 0 256 0v30c46.867 0 91.563 14.211 129.196 40.587h-29.074c-8.284 0-15 6.716-15 15s6.716 15 15 15h70.292c8.284 0 15-6.716 15-15V15.295c-.001-8.284-6.717-15-15.001-15zM477.67 128.002c-4.15-7.171-13.328-9.619-20.496-5.47-7.17 4.149-9.619 13.325-5.471 20.496C471.523 177.281 482 216.346 482 256c0 124.617-101.383 226-226 226v30c68.38 0 132.667-26.629 181.02-74.98C485.371 388.667 512 324.38 512 256c0-44.923-11.871-89.184-34.33-127.998z\"></path>\n            </g>\n        </svg>\n    );\n}\n\nexport default LoadingIcon;","import React from 'react'\nimport {Card, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport LoadingIcon from \"../icons/LoadingIcon\";\n\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    loadingTitle : {\n        margin: \"30px 40px\"\n    },\n    loadingMessage : {\n        margin: \"30px 40px\"\n    }\n}))\n\nexport type LoadingPropsType = {\n    message?: string\n}\n\nconst Loading: React.FC<LoadingPropsType> = (props) => {\n\n    const classes = useStyles()\n    const {message} = props\n\n    return (\n        <Grid\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{minHeight: '100vh'}}\n        >\n            <Card\n                className={classes.root}\n            >\n                <Grid item>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.loadingTitle}\n                    >It-incubator</Typography>\n                    <LoadingIcon size={\"100px\"}/>\n                    {\n                        message &&\n                        <Typography\n                            variant={\"body1\"}\n                            className={classes.loadingMessage}\n                        >\n                            {message}\n                        </Typography>}\n                </Grid>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default Loading","import React from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {\n    Button,\n    Card,\n    Checkbox, createStyles,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Grid, Link, makeStyles,\n    TextField, Theme, Typography\n} from \"@material-ui/core\";\nimport {PATH} from \"../Routes\";\nimport {forgotPassTC} from \"../../m2-bll/redux/restore-pass-reducer\";\nimport Loading from \"../common/c7-Progress/Loading\";\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        /*maxWidth: \"413px\",*/\n        width: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"40px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\"\n    },\n    displayStretch: {\n        display: \"flex\",\n        alignItems: \"stretch\"\n    },\n    textFieldArea: {\n        margin: \"0px 10px\"\n    }\n}))\n\n\n// some comments\n// some comments\n\nconst RestorePassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const {isLoggedIn} = useSelector((state: AppStoreType) => state.auth)\n    const {isPassRequestSent,} = useSelector((state: AppStoreType) => state.passRestore)\n    const {errorMessage, appStatus} = useSelector((state: AppStoreType) => state.app)\n\n\n    console.log(errorMessage)\n    console.log('App status', appStatus)\n\n    type FormikErrorType = {\n        email?: string\n    }\n\n    const restoreSchema = Yup.object().shape({\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            dispatch(forgotPassTC(formik.values.email))\n            formik.resetForm()\n        },\n    })\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    if (appStatus === 'loading') {\n        return <Loading message={\"Wait a minute please\"}/>\n    }\n    if (isPassRequestSent) {\n        return <Redirect to={PATH.RESTORE_PASS_CHECK_EMAIL}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Grid item>\n            <Card\n                className={classes.root}\n            >\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-incubator</Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Forget your password</Typography>\n                    <FormControl className={classes.displayStretch}>\n                        <FormGroup className={classes.textFieldArea}>\n                            <TextField\n                                type=\"email\"\n                                label=\"Email\"\n                                margin=\"normal\"\n                                {...formik.getFieldProps('email')}\n                            />\n                            {\n                                formik.touched.email && formik.errors.email &&\n                                <div style={{color: 'red'}}>{formik.errors.email}</div>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >\n                                Enter your email address and we will send you further instructions\n                            </Typography>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>Send instructions</Button>\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formLinkTitle}\n                            >Did you remember your password</Typography>\n                            <Link\n                                component={NavLink}\n                                to={PATH.LOGIN}\n                                color={\"textPrimary\"}\n                            >Try logging in\n                            </Link>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Card>\n        </Grid>\n    </Grid>\n}\nexport default RestorePassPage","import React, {useState} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport { useParams } from 'react-router-dom'\n/*import {setNewPasswordTC} from \"../../m2-bll/redux/restore-pass-reducer\";*/\n/*import {setNew}*/\n\nimport {\n    Button,\n    Card,\n    Checkbox, createStyles, FilledInput,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Grid, IconButton, Input, InputAdornment, Link, makeStyles,\n    TextField, Theme, Typography\n} from \"@material-ui/core\";\nimport {PATH} from \"../Routes\";\nimport {Visibility, VisibilityOff} from '@material-ui/icons';\nimport {setNewPasswordTC} from \"../../m2-bll/redux/restore-pass-reducer\";\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    formTitle: {\n        marginBottom: \"30px\",\n    },\n    formSubtitle: {\n        marginBottom: \"20px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"35px 35px\"\n    },\n    errorBlock: {\n        paddingTop: \"20px\"\n    }\n}))\n\n\nconst NewPassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const { isLoggedIn} = useSelector((state: AppStoreType) => state.auth)\n    const { isPassChanged} = useSelector((state: AppStoreType) => state.passRestore)\n    const { appStatus } = useSelector((state: AppStoreType) => state.app)\n    const [showPassword, setShowPassword] = useState(false)\n    const { token } = useParams<{token: string}>();\n    console.log('Token', token)\n\n    type FormikErrorType = {\n        password?: string\n    }\n\n    const restoreSchema = Yup.object().shape({\n        password: Yup.string()\n            .required('No password provided.')\n            .min(8, 'Password is too short - should be at least 8 character.')\n            .matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, 'Minimum eight characters, at least one letter, one number and one special character.'),\n    });\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        validationSchema: restoreSchema,\n        onSubmit: values => {\n            if (token) {\n                dispatch(setNewPasswordTC(formik.values.password, token))\n            }\n            formik.resetForm()\n        },\n    })\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword)\n    }\n    const handleMouseDownPassword = () => {\n        setShowPassword(!showPassword)\n    }\n    if ( appStatus === 'loading') {\n        return <div>Loading</div>\n    }\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n    if (isPassChanged) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Card\n            className={classes.root}\n        >\n            <Grid item>\n                <form onSubmit={formik.handleSubmit}>\n                    <Typography\n                        variant={\"h1\"}\n                        className={classes.formTitle}\n                    >It-incubator</Typography>\n                    <Typography\n                        variant={\"h2\"}\n                        className={classes.formSubtitle}\n                    >Create new pasword</Typography>\n                    <FormControl>\n                        <FormGroup>\n                            <Input\n                                type={showPassword ? 'text' : 'password'}\n                                placeholder={\"Password\"}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                {...formik.getFieldProps('password')}\n\n                            />\n                            {\n                                (formik.touched.password && formik.errors.password) ?\n                                    <div\n                                        style={{color: 'red'}}\n                                        className={classes.errorBlock}\n\n                                    >{formik.errors.password}</div> :\n                                    <br/>\n                            }\n                            <Typography\n                                variant={\"body1\"}\n                                className={classes.formDescription}\n                                align={\"left\"}\n                            >\n                                Create new password and we will send you further instructions to email\n                            </Typography>\n                            <Button\n                                type={'submit'}\n                                variant={'contained'}\n                                className={classes.formButtonBlock}\n                                color={'primary'}>Create new password</Button>\n                        </FormGroup>\n                    </FormControl>\n                </form>\n            </Grid>\n        </Card>\n    </Grid>\n}\nexport default NewPassPage","import React from \"react\";\n\nexport interface MessageIconPropsType  {\n    size? : string\n}\n\nconst MessageIcon : React.FC<MessageIconPropsType> = ({size}) =>  {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            /*width=\"512\"\n            height=\"512\"*/\n            height={ size }\n            width={ size }\n            viewBox=\"0 0 512 512\"\n        >\n            <linearGradient\n                id=\"SVGID_1_\"\n                x1=\"432.334\"\n                x2=\"198.334\"\n                y1=\"502.645\"\n                y2=\"192.646\"\n                gradientUnits=\"userSpaceOnUse\"\n            >\n                <stop offset=\"0\" stopColor=\"#d2deff\" stopOpacity=\"0\"></stop>\n                <stop offset=\"1\" stopColor=\"#b7c5ff\"></stop>\n            </linearGradient>\n            <path\n                fill=\"url(#SVGID_1_)\"\n                d=\"M501.873 153.583c-22.357-56.888-91.226-91.003-149.556-68.427-66.582 25.77-44.506 131.673-104.983 153.088-32.669 11.568-80.962-31.644-113.969-38.271-60.821-12.21-115.881 30.705-129.439 90.134-13.832 60.63 8.353 141.61 74.967 158.066 79.35 19.602 120.683-51.729 187.249-72.211 68.31-21.019 144.263 28.622 200.814-31.776 41.78-44.62 57.055-134.271 34.917-190.603z\"\n            ></path>\n            <path\n                fill=\"#2626bc\"\n                d=\"M476.847 178.593c0-39.497-32.019-71.517-71.517-71.517-30.6 0-56.699 19.225-66.91 46.25H79.812c-11.046 0-20 8.954-20 20v221.41c0 11.046 8.954 20 20 20h352.375c11.046 0 20-8.954 20-20v-162.14c15.099-13.113 24.66-32.435 24.66-54.003z\"\n                opacity=\"0.1\"\n            ></path>\n            <g fill=\"#fff\">\n                <path d=\"M432.187 389.736H79.812c-11.046 0-20-8.954-20-20v-221.41c0-11.046 8.954-20 20-20h352.375c11.046 0 20 8.954 20 20v221.41c0 11.046-8.954 20-20 20z\"></path>\n                <path d=\"M262.092 223.711l190.096 146.025c0 11.046-8.954 20-20 20H79.812c-11.046 0-20-8.954-20-20l190.096-146.025a10 10 0 0112.184 0z\"></path>\n                <path d=\"M249.908 294.352L59.812 148.326c0-11.046 8.954-20 20-20h352.375c11.046 0 20 8.954 20 20L262.092 294.352a10.002 10.002 0 01-12.184 0z\"></path>\n            </g>\n            <path\n                fill=\"#6583fe\"\n                d=\"M370.947 363.125h-32.134a5 5 0 01-5-5v-22.154a5 5 0 015-5h32.134a5 5 0 015 5v22.154a5 5 0 01-5 5z\"\n            ></path>\n            <path\n                fill=\"#2626bc\"\n                d=\"M311.871 342.743h-27.833a5 5 0 110-10h27.833a5 5 0 110 10zM311.871 363.125h-97.833a5 5 0 110-10h97.833a5 5 0 110 10z\"\n            ></path>\n            <g>\n                <ellipse\n                    cx=\"405.33\"\n                    cy=\"153.593\"\n                    fill=\"#6583fe\"\n                    rx=\"71.517\"\n                    ry=\"71.517\"\n                    transform=\"rotate(-80.8 405.29 153.649)\"\n                ></ellipse>\n                <path\n                    fill=\"#2626bc\"\n                    d=\"M405.33 230.11c42.191 0 76.517-34.325 76.517-76.517s-34.325-76.517-76.517-76.517-76.517 34.325-76.517 76.517c0 24.544 11.629 46.41 29.653 60.421l-99.42 76.372a5.004 5.004 0 01-6.092 0L64.992 146c1.121-7.17 7.341-12.674 14.82-12.674h229.366a5 5 0 100-10H79.812c-13.785 0-25 11.215-25 25v221.41c0 13.785 11.215 25 25 25h352.375c13.785 0 25-11.215 25-25v-132.14a5 5 0 10-10 0V359.59L316.28 259.031l50.94-39.13a76.017 76.017 0 0038.11 10.209zm-209.61 28.921L64.812 359.59V158.472zm251.27 113.018c-1.118 7.174-7.32 12.687-14.803 12.687H79.812c-7.483 0-13.685-5.513-14.803-12.687l138.919-106.713 42.934 32.98c2.69 2.066 5.914 3.1 9.138 3.1s6.447-1.033 9.138-3.1l42.934-32.981zM338.813 153.593c0-36.677 29.839-66.517 66.517-66.517s66.517 29.839 66.517 66.517c0 36.677-29.839 66.517-66.517 66.517s-66.517-29.84-66.517-66.517z\"\n                ></path>\n            </g>\n            <path\n                fill=\"#fff\"\n                d=\"M374.114 129.204l10.206 24.389-10.206 24.389c-1.733 4.142 2.448 8.292 6.577 6.528l61.619-26.319c4.048-1.729 4.048-7.467 0-9.196l-61.619-26.319c-4.129-1.764-8.31 2.386-6.577 6.528z\"\n            ></path>\n            <g fill=\"#6583fe\">\n                <path d=\"M330.828 81.671a14.45 14.45 0 01-10.253-4.24c-5.654-5.654-5.654-14.853 0-20.506 5.651-5.652 14.852-5.654 20.505 0 5.654 5.654 5.654 14.853 0 20.506a14.45 14.45 0 01-10.252 4.24zm0-18.991a4.487 4.487 0 00-3.183 1.316 4.506 4.506 0 000 6.364 4.505 4.505 0 006.364 0 4.506 4.506 0 000-6.364 4.487 4.487 0 00-3.181-1.316zM218.538 459.315a14.457 14.457 0 01-10.253-4.24c-5.654-5.654-5.654-14.853 0-20.506 5.652-5.653 14.854-5.653 20.506 0 5.654 5.654 5.654 14.853 0 20.506a14.453 14.453 0 01-10.253 4.24zm0-18.991a4.487 4.487 0 00-3.183 1.316 4.506 4.506 0 000 6.364 4.506 4.506 0 006.365 0 4.506 4.506 0 000-6.364 4.487 4.487 0 00-3.182-1.316zM294.78 94.547a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535zM439.746 440.322a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535zM178.884 445.072a4.983 4.983 0 01-3.535-1.464l-5.965-5.964-5.965 5.964a5 5 0 01-7.07-7.071l9.5-9.5a5 5 0 017.07 0l9.5 9.5a5 5 0 01-3.535 8.535z\"></path>\n            </g>\n        </svg>\n    );\n}\n\nexport default MessageIcon;","import React from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport {\n    Button,\n    Card,\n    Checkbox, createStyles,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    FormLabel,\n    Grid, Link, makeStyles,\n    TextField, Theme, Typography\n} from \"@material-ui/core\";\nimport MessageIcon from '../common/icons/MessageIcon';\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        textAlign: \"center\",\n        padding: \"30px 30px\",\n        maxWidth: \"413px\",\n    },\n    formSubtitle: {\n        marginBottom: \"20px\",\n    },\n    formDescription: {\n        marginTop: \"20px\",\n        marginBottom: \"40px\",\n    },\n    formLinkTitle: {\n        paddingTop: \"30px\",\n        paddingBottom: \"15px\",\n    },\n    formButtonBlock: {\n        margin: \"0px 35px\"\n    },\n    formIcon: {\n        /*fontSize: \"64px\",*/\n        margin: \"25px 0px\",\n        color: \"#21268F\",\n        opacity: 0.7,\n    }\n}))\n\n\nconst RestorePassPage: React.FC = () => {\n\n    const classes = useStyles()\n    const isLoggedIn = useSelector((state: AppStoreType) => state.auth.isLoggedIn)\n\n    if (isLoggedIn) {\n        return <Redirect to={'/'}/>\n    }\n\n    return <Grid\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{minHeight: '100vh'}}\n    >\n        <Card\n            className={classes.root}\n        >\n            <Grid item>\n                <Typography\n                    variant={\"h1\"}\n                    className={classes.formTitle}\n                >It-incubator</Typography>\n                <div className={classes.formIcon}>\n                    <MessageIcon\n                        size=\"72px\"\n                    />\n                </div>\n                <Typography\n                    variant={\"h2\"}\n                    className={classes.formSubtitle}\n                >Forget your password</Typography>\n                <Typography\n                    variant={\"body1\"}\n                    className={classes.formDescription}\n                >\n                    We’ve sent an Email with instructions to example@mail.com\n                </Typography>\n            </Grid>\n        </Card>\n    </Grid>\n}\nexport default RestorePassPage","import React from 'react'\nimport {Redirect, Switch, Route} from 'react-router-dom'\nimport LoginPage from './Pages/LoginPage'\nimport SignupPage from \"./Pages/signupPage/SignupPage\";\nimport ProfilePage from \"./Pages/ProfilePage\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\nimport RestorePassPage from \"./Pages/RestorePassPage\";\nimport NewPassPage from \"./Pages/NewPassPage\";\nimport TestPage from \"./Pages/TestPage\";\nimport RestorePassCheckEmailPage from \"./Pages/RestorePassCheckEmailPage\";\nimport Loading from \"./common/c7-Progress/Loading\";\n\n\n\nexport const PATH = {\n    LOGIN: '/login',\n    SIGNUP: '/signup',\n    PROFILE: '/profile',\n    NOTFOUND: '/404',\n    RESTORE_PASS: '/restore',\n    RESTORE_PASS_CHECK_EMAIL: '/check_email',\n    NEW_PASS: '/set-new-password',\n    TEST_PAGE: '/test_page',\n    ALL_ROUTES : '*',\n}\n\nconst  Routes : React.FC = ()  => {\n\n    console.log('Routes App' )\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PROFILE*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n\n                <Route path={PATH.LOGIN} exact render={() => <LoginPage/>}/>\n                <Route path={PATH.SIGNUP} exact render={() => <SignupPage/>}/>\n                <Route path={PATH.PROFILE} render={() => <ProfilePage/>}/>\n                <Route path={PATH.RESTORE_PASS} render={() => <RestorePassPage/>}/>\n                <Route path={PATH.RESTORE_PASS_CHECK_EMAIL} render={() => <RestorePassCheckEmailPage/>}/>\n                <Route path={PATH.NEW_PASS + '/:token'} component={NewPassPage}/>\n                {/*<Route path={PATH.DESTINATION_LIST_PAGE + '/:id'} exact={true} component={DestinationProfileContainer} />*/}\n                <Route path={PATH.TEST_PAGE} render={() => <Loading message={\"Wait a minute please\"}/>}/>\n                <Route path={\"/NotFoundPage\"} render={() => <NotFoundPage/>}/>\n                <Redirect from={PATH.ALL_ROUTES} to={\"NotFoundPage\"}/>\n                {/*<Route render={() => <LoginPage/>}/>*/}\n            </Switch>\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                {/*если бы не было path={PATH.ALL_ROUTES} render={() => */}\n\n\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink, useHistory, useParams} from 'react-router-dom'\nimport s from './Header.module.css'\nimport {PATH} from \"../Routes\";\nimport {\n    AppBar,\n    Button, createStyles,\n    IconButton,\n    LinearProgress,\n    Link, List,\n    ListItem,\n    ListItemIcon, ListItemText,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport {Menu} from \"@material-ui/icons\";\nimport {useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../m2-bll/redux/store\";\nimport CardsIcon from \"../common/icons/CardsIcon\";\nimport ProfileIcon from \"../common/icons/ProfileIcon\";\n\nconst useStyles = makeStyles<Theme>(theme => createStyles({\n    root: {\n        backgroundColor: \"#EBE0E9\",\n\n    },\n    listBlock : {\n        display : \"flex\",\n        flexDirection: \"row\"\n    },\n    iconBlock : {\n    },\n    menuItem: {\n        color: \"#2D2E46\",\n    }\n}))\n\nconst Header: React.FC = () => {\n    const {appStatus} = useSelector((state: AppStoreType) => state.app)\n    const history = useHistory()\n    const classes = useStyles()\n    return (\n        <div>\n            <AppBar\n                position=\"static\"\n                className={classes.root}\n            >\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        aria-label=\"menu\"\n                        className={classes.itemMenu}\n                    >\n                        <Menu/>\n                    </IconButton>\n                    <Typography variant=\"h1\">\n                        It-Incubator\n                    </Typography>\n                    <div>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.LOGIN)}\n                        >Login</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.SIGNUP)}\n                        >Sign up</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.PROFILE)}\n                        >Profile</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.RESTORE_PASS)}\n                        >Restore Pass</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.NEW_PASS)}\n                        >New Pass</Button>\n                        <Button\n                            color=\"inherit\"\n                            className={classes.menuItem}\n                            onClick={() => history.push(PATH.TEST_PAGE)}\n                        >Test Page</Button>\n                    </div>\n                    {/*<List\n                        component=\"nav\"\n                        aria-label=\"main mailbox folders\"\n                        className={classes.listBlock}\n                    >\n                        <ListItem button>\n                            <ListItemIcon className={classes.iconBlock}>\n                                <CardsIcon size={\"40\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Inbox\" />\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <ProfileIcon size={\"25\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary=\"Drafts\" />\n                        </ListItem>\n                    </List>*/}\n                </Toolbar>\n                {appStatus === 'loading' && <LinearProgress color={\"secondary\"}/>}\n            </AppBar>\n            {/*<nav className={s.menu}>\n                <div className={s.content}>\n                    <NavLink\n                        to={PATH.LOGIN}\n                        className={s.item}\n                    >Login</NavLink>\n                    <NavLink\n                        to={PATH.SIGNUP}\n                        className={s.item}\n                    >Sign up</NavLink>\n                    <NavLink\n                        to={PATH.PROFILE}\n                        className={s.item}\n                    >Profile</NavLink>\n                    <NavLink\n                        to={PATH.RESTORE_PASS}\n                        className={s.item}\n                    >Restore Pass</NavLink>\n                    <NavLink\n                        to={PATH.NEW_PASS}\n                        className={s.item}\n                    >New Pass</NavLink>\n                    <NavLink\n                        to={PATH.TEST_PAGE}\n                        className={s.item}\n                    >Test Page</NavLink>\n                    <div className={s.item + ' ' + s.waffel}>menu</div>\n                </div>\n            </nav>*/}\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport './App.css';\nimport Routes from './m1-ui/Routes';\nimport Header from \"./m1-ui/Header/Header\";\n\n\nfunction App() {\n    console.log('Render App' )\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Routes/>\n          {/*commit from github.com page interface*/}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware} from \"redux\"\nimport thunkMiddleware from 'redux-thunk'\nimport {authReducer} from \"./auth-reducer\";\n/*import {signupReducer} from \"../../m1-ui/Pages/signupPage/signupReducer\";*/\nimport {appReducer} from \"./app-reducer\";\nimport {passRestoreReducer} from \"./restore-pass-reducer\";\nimport {profileReducer} from \"./profile-reducer\";\nimport {signupReducer} from \"../../m1-ui/Pages/signupPage/signupReducer\";\n\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    signup: signupReducer,\n    app : appReducer,\n    passRestore : passRestoreReducer,\n    profile: profileReducer\n});\n\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\n// window.store = store; // for dev\n","import {createTheme} from \"@material-ui/core\";\n\nexport const muiTheme = createTheme({\n    overrides: {\n        MuiCssBaseline: {\n            '@global': {\n                body: {\n                    background: 'linear-gradient(to bottom, #EBE0E9 30%, #9A91C8 90%)',\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundAttachment: \"fixed\",\n                },\n            },\n        },\n\n        MuiButton: {\n            root: {\n                fontSize: '16px',\n                color: \"#21268F\",\n                fontFamily: 'SF UI Display, sans-serif',\n                fontWeight: 500,\n                fontStyle: \"normal\",\n                lineHeight: \"19px\",\n                borderRadius: \"30px\",\n                textTransform: \"none\",\n                padding: \"8px 16px\",\n            },\n        },\n        MuiCard: {\n            root: {\n                borderRadius : \"8px\",\n                backgroundColor : \"#F9F9FE\",\n            }\n        },\n        MuiLink: {\n            root : {\n                fontSize: '16px',\n                color: \"#21268F\",\n                fontFamily: 'SF UI Display, sans-serif',\n                fontWeight: 600,\n                fontStyle: \"normal\",\n                lineHeight: \"24px\",\n                borderRadius: \"30px\",\n            }\n        },\n        MuiTextField : {\n            root : {\n                fontWeight: 600,\n                /*display : \"flex\",\n                alignItems : \"stretch\",*/\n                fontFamily: 'SF UI Display, sans-serif',\n                fontStyle: \"normal\",\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                color: \"#2D2E46\",\n            }\n        },\n        MuiInput : {\n            root : {\n                fontWeight: 300,\n                fontFamily: 'SF UI Display, sans-serif',\n                fontStyle: \"normal\",\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                color: \"#2D2E46\",\n            }\n        }\n    },\n\n    typography: {\n        // Use the system font instead of the default Roboto font.\n        h1: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"26px\",\n            lineHeight: \"39px\",\n            fontFamily: \"Poppins\",\n            color: \"#2D2E46\",\n        },\n        h2: {\n            fontWeight: 600,\n            fontStyle: \"normal\",\n            fontSize: \"22px\",\n            lineHeight: \"33px\",\n            fontFamily: \"Poppins\",\n            color: \"#2D2E46\",\n        },\n        body1: {\n            fontWeight: 300,\n            fontStyle: \"normal\",\n            fontSize: \"16px\",\n            lineHeight: \"24px\",\n            fontFamily: 'SF UI Display, sans-serif',\n            color: \"#2D2E46\",\n            opacity: 0.6,\n        },\n        fontFamily: [\n            'Poppins',\n            'SF UI Display, sans-serif',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n        ].join(','),\n    },\n    palette: {\n        primary: {\n            light: '#b8f04a',\n            main: '#21268F',\n            dark: '#2D2E46'\n        },\n        secondary: {\n            light: '#e35ba2',\n            main: '#21268F',\n            dark: '#21268F'\n        },\n        error: {\n            main: '#ae2573',\n        },\n        warning: {\n            main: '#ffa500'\n        },\n        info: {\n            main: '#009cde',\n        },\n        text: {\n            primary: '#666666',\n            secondary: '#b3b3b3',\n        },\n    },\n\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from './n1-main/m2-bll/redux/store';\nimport {CssBaseline, MuiThemeProvider} from '@material-ui/core';\nimport {muiTheme} from \"./n1-main/m1-ui/common/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <MuiThemeProvider theme={muiTheme}>\n          <CssBaseline/>\n          <Provider store={store}>\n              <HashRouter>\n              {/*<BrowserRouter>*/}\n                  <App />\n              {/*</BrowserRouter>*/}\n              </HashRouter>\n          </Provider>\n      </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}